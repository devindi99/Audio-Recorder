
LCD_i2c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c4  00800100  00000cc2  00000d56  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cc2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  008001c4  008001c4  00000e1a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e1a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e4c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00000e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a62  00000000  00000000  00000fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000078c  00000000  00000000  00002a0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000edb  00000000  00000000  0000319a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000240  00000000  00000000  00004078  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000527  00000000  00000000  000042b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000385  00000000  00000000  000047df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00004b64  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ec       	ldi	r30, 0xC2	; 194
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 3c       	cpi	r26, 0xC4	; 196
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 ec       	ldi	r26, 0xC4	; 196
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 3c       	cpi	r26, 0xCB	; 203
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <main>
  9e:	0c 94 5f 06 	jmp	0xcbe	; 0xcbe <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //----Command for Left Shift
	delay(200);
  a6:	82 e6       	ldi	r24, 0x62	; 98
  a8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  ac:	84 e0       	ldi	r24, 0x04	; 4
  ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  b6:	08 95       	ret

000000b8 <i2c_start>:
  b8:	84 ea       	ldi	r24, 0xA4	; 164
  ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  c2:	88 23       	and	r24, r24
  c4:	e4 f7       	brge	.-8      	; 0xbe <i2c_start+0x6>
  c6:	08 95       	ret

000000c8 <i2c_write>:
  c8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  cc:	84 e8       	ldi	r24, 0x84	; 132
  ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d6:	88 23       	and	r24, r24
  d8:	e4 f7       	brge	.-8      	; 0xd2 <i2c_write+0xa>
  da:	08 95       	ret

000000dc <delay>:
  dc:	40 e0       	ldi	r20, 0x00	; 0
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	0a c0       	rjmp	.+20     	; 0xf6 <delay+0x1a>
  e2:	2f 5f       	subi	r18, 0xFF	; 255
  e4:	3f 4f       	sbci	r19, 0xFF	; 255
  e6:	02 c0       	rjmp	.+4      	; 0xec <delay+0x10>
  e8:	20 e0       	ldi	r18, 0x00	; 0
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	29 37       	cpi	r18, 0x79	; 121
  ee:	31 05       	cpc	r19, r1
  f0:	c4 f3       	brlt	.-16     	; 0xe2 <delay+0x6>
  f2:	4f 5f       	subi	r20, 0xFF	; 255
  f4:	5f 4f       	sbci	r21, 0xFF	; 255
  f6:	84 17       	cp	r24, r20
  f8:	95 07       	cpc	r25, r21
  fa:	b4 f7       	brge	.-20     	; 0xe8 <delay+0xc>
  fc:	08 95       	ret

000000fe <toggle>:
  fe:	eb eb       	ldi	r30, 0xBB	; 187
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	82 60       	ori	r24, 0x02	; 2
 106:	80 83       	st	Z, r24
 108:	84 e8       	ldi	r24, 0x84	; 132
 10a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 10e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 112:	88 23       	and	r24, r24
 114:	e4 f7       	brge	.-8      	; 0x10e <toggle+0x10>
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 6e 00 	call	0xdc	; 0xdc <delay>
 11e:	eb eb       	ldi	r30, 0xBB	; 187
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	8d 7f       	andi	r24, 0xFD	; 253
 126:	80 83       	st	Z, r24
 128:	84 e8       	ldi	r24, 0x84	; 132
 12a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 12e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 132:	88 23       	and	r24, r24
 134:	e4 f7       	brge	.-8      	; 0x12e <toggle+0x30>
 136:	08 95       	ret

00000138 <lcd_cmd_hf>:
 138:	eb eb       	ldi	r30, 0xBB	; 187
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	90 81       	ld	r25, Z
 13e:	9e 7f       	andi	r25, 0xFE	; 254
 140:	90 83       	st	Z, r25
 142:	94 e8       	ldi	r25, 0x84	; 132
 144:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 148:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 14c:	99 23       	and	r25, r25
 14e:	e4 f7       	brge	.-8      	; 0x148 <lcd_cmd_hf+0x10>
 150:	eb eb       	ldi	r30, 0xBB	; 187
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	90 81       	ld	r25, Z
 156:	9f 70       	andi	r25, 0x0F	; 15
 158:	90 83       	st	Z, r25
 15a:	94 e8       	ldi	r25, 0x84	; 132
 15c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 160:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 164:	99 23       	and	r25, r25
 166:	e4 f7       	brge	.-8      	; 0x160 <lcd_cmd_hf+0x28>
 168:	eb eb       	ldi	r30, 0xBB	; 187
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	90 81       	ld	r25, Z
 16e:	80 7f       	andi	r24, 0xF0	; 240
 170:	89 2b       	or	r24, r25
 172:	80 83       	st	Z, r24
 174:	84 e8       	ldi	r24, 0x84	; 132
 176:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17e:	88 23       	and	r24, r24
 180:	e4 f7       	brge	.-8      	; 0x17a <lcd_cmd_hf+0x42>
 182:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 186:	08 95       	ret

00000188 <lcd_cmd>:
 188:	cf 93       	push	r28
 18a:	c8 2f       	mov	r28, r24
 18c:	eb eb       	ldi	r30, 0xBB	; 187
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	8e 7f       	andi	r24, 0xFE	; 254
 194:	80 83       	st	Z, r24
 196:	84 e8       	ldi	r24, 0x84	; 132
 198:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 19c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a0:	88 23       	and	r24, r24
 1a2:	e4 f7       	brge	.-8      	; 0x19c <lcd_cmd+0x14>
 1a4:	eb eb       	ldi	r30, 0xBB	; 187
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	8f 70       	andi	r24, 0x0F	; 15
 1ac:	80 83       	st	Z, r24
 1ae:	84 e8       	ldi	r24, 0x84	; 132
 1b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b8:	88 23       	and	r24, r24
 1ba:	e4 f7       	brge	.-8      	; 0x1b4 <lcd_cmd+0x2c>
 1bc:	eb eb       	ldi	r30, 0xBB	; 187
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	9c 2f       	mov	r25, r28
 1c4:	90 7f       	andi	r25, 0xF0	; 240
 1c6:	89 2b       	or	r24, r25
 1c8:	80 83       	st	Z, r24
 1ca:	84 e8       	ldi	r24, 0x84	; 132
 1cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d4:	88 23       	and	r24, r24
 1d6:	e4 f7       	brge	.-8      	; 0x1d0 <lcd_cmd+0x48>
 1d8:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 1dc:	eb eb       	ldi	r30, 0xBB	; 187
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	8f 70       	andi	r24, 0x0F	; 15
 1e4:	80 83       	st	Z, r24
 1e6:	84 e8       	ldi	r24, 0x84	; 132
 1e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1f0:	88 23       	and	r24, r24
 1f2:	e4 f7       	brge	.-8      	; 0x1ec <lcd_cmd+0x64>
 1f4:	eb eb       	ldi	r30, 0xBB	; 187
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	20 81       	ld	r18, Z
 1fa:	30 e1       	ldi	r19, 0x10	; 16
 1fc:	c3 9f       	mul	r28, r19
 1fe:	c0 01       	movw	r24, r0
 200:	11 24       	eor	r1, r1
 202:	82 2b       	or	r24, r18
 204:	80 83       	st	Z, r24
 206:	84 e8       	ldi	r24, 0x84	; 132
 208:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 20c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 210:	88 23       	and	r24, r24
 212:	e4 f7       	brge	.-8      	; 0x20c <lcd_cmd+0x84>
 214:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 218:	cf 91       	pop	r28
 21a:	08 95       	ret

0000021c <lcd_init>:
 21c:	80 e3       	ldi	r24, 0x30	; 48
 21e:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 222:	80 e3       	ldi	r24, 0x30	; 48
 224:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 228:	80 e2       	ldi	r24, 0x20	; 32
 22a:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 22e:	88 e2       	ldi	r24, 0x28	; 40
 230:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 23a:	86 e0       	ldi	r24, 0x06	; 6
 23c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 240:	80 e8       	ldi	r24, 0x80	; 128
 242:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 246:	8f e0       	ldi	r24, 0x0F	; 15
 248:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 24c:	08 95       	ret

0000024e <lcd_dwr>:
 24e:	cf 93       	push	r28
 250:	c8 2f       	mov	r28, r24
 252:	eb eb       	ldi	r30, 0xBB	; 187
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	81 60       	ori	r24, 0x01	; 1
 25a:	80 83       	st	Z, r24
 25c:	84 e8       	ldi	r24, 0x84	; 132
 25e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 262:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 266:	88 23       	and	r24, r24
 268:	e4 f7       	brge	.-8      	; 0x262 <lcd_dwr+0x14>
 26a:	eb eb       	ldi	r30, 0xBB	; 187
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	8f 70       	andi	r24, 0x0F	; 15
 272:	80 83       	st	Z, r24
 274:	84 e8       	ldi	r24, 0x84	; 132
 276:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27e:	88 23       	and	r24, r24
 280:	e4 f7       	brge	.-8      	; 0x27a <lcd_dwr+0x2c>
 282:	eb eb       	ldi	r30, 0xBB	; 187
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	9c 2f       	mov	r25, r28
 28a:	90 7f       	andi	r25, 0xF0	; 240
 28c:	89 2b       	or	r24, r25
 28e:	80 83       	st	Z, r24
 290:	84 e8       	ldi	r24, 0x84	; 132
 292:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 296:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 29a:	88 23       	and	r24, r24
 29c:	e4 f7       	brge	.-8      	; 0x296 <lcd_dwr+0x48>
 29e:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2a2:	eb eb       	ldi	r30, 0xBB	; 187
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	80 81       	ld	r24, Z
 2a8:	8f 70       	andi	r24, 0x0F	; 15
 2aa:	80 83       	st	Z, r24
 2ac:	84 e8       	ldi	r24, 0x84	; 132
 2ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b6:	88 23       	and	r24, r24
 2b8:	e4 f7       	brge	.-8      	; 0x2b2 <lcd_dwr+0x64>
 2ba:	eb eb       	ldi	r30, 0xBB	; 187
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	20 81       	ld	r18, Z
 2c0:	30 e1       	ldi	r19, 0x10	; 16
 2c2:	c3 9f       	mul	r28, r19
 2c4:	c0 01       	movw	r24, r0
 2c6:	11 24       	eor	r1, r1
 2c8:	82 2b       	or	r24, r18
 2ca:	80 83       	st	Z, r24
 2cc:	84 e8       	ldi	r24, 0x84	; 132
 2ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d6:	88 23       	and	r24, r24
 2d8:	e4 f7       	brge	.-8      	; 0x2d2 <lcd_dwr+0x84>
 2da:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2de:	cf 91       	pop	r28
 2e0:	08 95       	ret

000002e2 <lcd_msg>:
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	ec 01       	movw	r28, r24
 2e8:	03 c0       	rjmp	.+6      	; 0x2f0 <lcd_msg+0xe>
 2ea:	21 96       	adiw	r28, 0x01	; 1
 2ec:	0e 94 27 01 	call	0x24e	; 0x24e <lcd_dwr>
 2f0:	88 81       	ld	r24, Y
 2f2:	81 11       	cpse	r24, r1
 2f4:	fa cf       	rjmp	.-12     	; 0x2ea <lcd_msg+0x8>
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	08 95       	ret

000002fc <Navigate>:
	}
}

void Navigate(){
	
	if (UPval==2)
 2fc:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <UPval>
 300:	82 30       	cpi	r24, 0x02	; 2
 302:	61 f4       	brne	.+24     	; 0x31c <Navigate+0x20>
	{
		lcd_cmd(0x0F);
 304:	8f e0       	ldi	r24, 0x0F	; 15
 306:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 30a:	80 e8       	ldi	r24, 0x80	; 128
 30c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		Row=1;
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	90 93 c5 01 	sts	0x01C5, r25	; 0x8001c5 <__data_end+0x1>
 318:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <__data_end>
		
	}
	if (DOWNval==4)
 31c:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <DOWNval>
 320:	84 30       	cpi	r24, 0x04	; 4
 322:	61 f4       	brne	.+24     	; 0x33c <Navigate+0x40>
	{
		lcd_cmd(0x0F);
 324:	8f e0       	ldi	r24, 0x0F	; 15
 326:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0xC0);
 32a:	80 ec       	ldi	r24, 0xC0	; 192
 32c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		Row=2;
 330:	82 e0       	ldi	r24, 0x02	; 2
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	90 93 c5 01 	sts	0x01C5, r25	; 0x8001c5 <__data_end+0x1>
 338:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <__data_end>
 33c:	08 95       	ret

0000033e <Menu>:
		
	}
}
void Menu(){
	lcd_cmd(0x01);
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 344:	80 e8       	ldi	r24, 0x80	; 128
 346:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 34a:	84 e1       	ldi	r24, 0x14	; 20
 34c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Playback audio");
 350:	84 e0       	ldi	r24, 0x04	; 4
 352:	91 e0       	ldi	r25, 0x01	; 1
 354:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0xC0);
 358:	80 ec       	ldi	r24, 0xC0	; 192
 35a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 35e:	84 e1       	ldi	r24, 0x14	; 20
 360:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Delete Audio");
 364:	83 e1       	ldi	r24, 0x13	; 19
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 36c:	8c e0       	ldi	r24, 0x0C	; 12
 36e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 1;
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 37a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row = 0;
 37e:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 382:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 386:	08 95       	ret

00000388 <Recording>:
	if (SELval ==8 && Screen == 7 && Row == 2){
		TrebleClip();
	}
}
void Recording(){
	if (RECval ==1){
 388:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <RECval>
 38c:	81 30       	cpi	r24, 0x01	; 1
 38e:	a9 f5       	brne	.+106    	; 0x3fa <Recording+0x72>
 390:	0e c0       	rjmp	.+28     	; 0x3ae <Recording+0x26>
		
	while ( RECval == 1 )
	{
		lcd_cmd(0x01);
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Recording...");
 398:	80 e2       	ldi	r24, 0x20	; 32
 39a:	91 e0       	ldi	r25, 0x01	; 1
 39c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		RECval = PIND & (1<<PIND0);
 3a0:	89 b1       	in	r24, 0x09	; 9
 3a2:	81 70       	andi	r24, 0x01	; 1
 3a4:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <RECval>
		lcd_cmd(0x01);
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	}
}
void Recording(){
	if (RECval ==1){
		
	while ( RECval == 1 )
 3ae:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <RECval>
 3b2:	81 30       	cpi	r24, 0x01	; 1
 3b4:	71 f3       	breq	.-36     	; 0x392 <Recording+0xa>
		lcd_cmd(0x01);
		lcd_msg("Recording...");
		RECval = PIND & (1<<PIND0);
		lcd_cmd(0x01);
	}
	lcd_msg("File Saved");
 3b6:	8d e2       	ldi	r24, 0x2D	; 45
 3b8:	91 e0       	ldi	r25, 0x01	; 1
 3ba:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	filenumber= filenumber+1;
 3be:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 3c2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3c6:	01 96       	adiw	r24, 0x01	; 1
 3c8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3cc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3d0:	2f ef       	ldi	r18, 0xFF	; 255
 3d2:	83 ed       	ldi	r24, 0xD3	; 211
 3d4:	90 e3       	ldi	r25, 0x30	; 48
 3d6:	21 50       	subi	r18, 0x01	; 1
 3d8:	80 40       	sbci	r24, 0x00	; 0
 3da:	90 40       	sbci	r25, 0x00	; 0
 3dc:	e1 f7       	brne	.-8      	; 0x3d6 <Recording+0x4e>
 3de:	00 c0       	rjmp	.+0      	; 0x3e0 <Recording+0x58>
 3e0:	00 00       	nop
	_delay_ms(1000);
	Menu();
 3e2:	0e 94 9f 01 	call	0x33e	; 0x33e <Menu>
	Row=0;
 3e6:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 3ea:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
	Screen=1;
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 3f6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
 3fa:	08 95       	ret

000003fc <PlayBackAudioI>:
	lcd_cmd(0x0C);
	Screen = 1;
	Row = 0;
}
void PlayBackAudioI(){
	lcd_cmd(0x01);
 3fc:	81 e0       	ldi	r24, 0x01	; 1
 3fe:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 402:	80 e8       	ldi	r24, 0x80	; 128
 404:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 408:	84 e1       	ldi	r24, 0x14	; 20
 40a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 1");
 40e:	88 e3       	ldi	r24, 0x38	; 56
 410:	91 e0       	ldi	r25, 0x01	; 1
 412:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 416:	8c e0       	ldi	r24, 0x0C	; 12
 418:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 2;
 41c:	82 e0       	ldi	r24, 0x02	; 2
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 424:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row = 0;
 428:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 42c:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 430:	08 95       	ret

00000432 <PlayBackAudioII>:
}
void PlayBackAudioII(){
	lcd_cmd(0x01);
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 438:	80 e8       	ldi	r24, 0x80	; 128
 43a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 43e:	84 e1       	ldi	r24, 0x14	; 20
 440:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 2");
 444:	80 e4       	ldi	r24, 0x40	; 64
 446:	91 e0       	ldi	r25, 0x01	; 1
 448:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 44c:	8c e0       	ldi	r24, 0x0C	; 12
 44e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 3;
 452:	83 e0       	ldi	r24, 0x03	; 3
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 45a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row = 0;
 45e:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 462:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 466:	08 95       	ret

00000468 <PlayBackAudioIII>:
}
void PlayBackAudioIII(){
	lcd_cmd(0x01);
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 46e:	80 e8       	ldi	r24, 0x80	; 128
 470:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 474:	84 e1       	ldi	r24, 0x14	; 20
 476:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 3");
 47a:	88 e4       	ldi	r24, 0x48	; 72
 47c:	91 e0       	ldi	r25, 0x01	; 1
 47e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 482:	8c e0       	ldi	r24, 0x0C	; 12
 484:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 4;
 488:	84 e0       	ldi	r24, 0x04	; 4
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 490:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row = 0;
 494:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 498:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 49c:	08 95       	ret

0000049e <PlayBackAudioIV>:
}
void PlayBackAudioIV(){
	lcd_cmd(0x01);
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 4a4:	80 e8       	ldi	r24, 0x80	; 128
 4a6:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 4aa:	84 e1       	ldi	r24, 0x14	; 20
 4ac:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 4");
 4b0:	80 e5       	ldi	r24, 0x50	; 80
 4b2:	91 e0       	ldi	r25, 0x01	; 1
 4b4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 4b8:	8c e0       	ldi	r24, 0x0C	; 12
 4ba:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 5;
 4be:	85 e0       	ldi	r24, 0x05	; 5
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 4c6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row = 0;
 4ca:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 4ce:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 4d2:	08 95       	ret

000004d4 <DeleteAudioI>:
}

void DeleteAudioI(){
	lcd_cmd(0x01);
 4d4:	81 e0       	ldi	r24, 0x01	; 1
 4d6:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 4da:	80 e8       	ldi	r24, 0x80	; 128
 4dc:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 4e0:	84 e1       	ldi	r24, 0x14	; 20
 4e2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 1");
 4e6:	88 e3       	ldi	r24, 0x38	; 56
 4e8:	91 e0       	ldi	r25, 0x01	; 1
 4ea:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 4ee:	8c e0       	ldi	r24, 0x0C	; 12
 4f0:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 100;
 4f4:	84 e6       	ldi	r24, 0x64	; 100
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 4fc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row = 0;
 500:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 504:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 508:	08 95       	ret

0000050a <DeleteAudioII>:
}
void DeleteAudioII(){
	lcd_cmd(0x01);
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 510:	80 e8       	ldi	r24, 0x80	; 128
 512:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 516:	84 e1       	ldi	r24, 0x14	; 20
 518:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 2");
 51c:	80 e4       	ldi	r24, 0x40	; 64
 51e:	91 e0       	ldi	r25, 0x01	; 1
 520:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 524:	8c e0       	ldi	r24, 0x0C	; 12
 526:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 101;
 52a:	85 e6       	ldi	r24, 0x65	; 101
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 532:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row = 0;
 536:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 53a:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 53e:	08 95       	ret

00000540 <DeleteAudioIII>:
}
void DeleteAudioIII(){
	lcd_cmd(0x01);
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 546:	80 e8       	ldi	r24, 0x80	; 128
 548:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 54c:	84 e1       	ldi	r24, 0x14	; 20
 54e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 3");
 552:	88 e4       	ldi	r24, 0x48	; 72
 554:	91 e0       	ldi	r25, 0x01	; 1
 556:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 55a:	8c e0       	ldi	r24, 0x0C	; 12
 55c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 102;
 560:	86 e6       	ldi	r24, 0x66	; 102
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 568:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row = 0;
 56c:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 570:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 574:	08 95       	ret

00000576 <DeleteAudioIV>:
}
void DeleteAudioIV(){
	lcd_cmd(0x01);
 576:	81 e0       	ldi	r24, 0x01	; 1
 578:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 57c:	80 e8       	ldi	r24, 0x80	; 128
 57e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 582:	84 e1       	ldi	r24, 0x14	; 20
 584:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 4");
 588:	80 e5       	ldi	r24, 0x50	; 80
 58a:	91 e0       	ldi	r25, 0x01	; 1
 58c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 590:	8c e0       	ldi	r24, 0x0C	; 12
 592:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 103;
 596:	87 e6       	ldi	r24, 0x67	; 103
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 59e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row = 0;
 5a2:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 5a6:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 5aa:	08 95       	ret

000005ac <NPlayClip>:
}
void NPlayClip(){
	lcd_cmd(0x01);
 5ac:	81 e0       	ldi	r24, 0x01	; 1
 5ae:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 5b2:	80 e8       	ldi	r24, 0x80	; 128
 5b4:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 5b8:	84 e1       	ldi	r24, 0x14	; 20
 5ba:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("No Effect");
 5be:	88 e5       	ldi	r24, 0x58	; 88
 5c0:	91 e0       	ldi	r25, 0x01	; 1
 5c2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 5c6:	8c e0       	ldi	r24, 0x0C	; 12
 5c8:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 6;
 5cc:	86 e0       	ldi	r24, 0x06	; 6
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 5d4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row =0;
 5d8:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 5dc:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 5e0:	08 95       	ret

000005e2 <BassClip>:
}
void BassClip(){
	lcd_cmd(0x01);
 5e2:	81 e0       	ldi	r24, 0x01	; 1
 5e4:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 5e8:	80 e8       	ldi	r24, 0x80	; 128
 5ea:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 5ee:	84 e1       	ldi	r24, 0x14	; 20
 5f0:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Bass");
 5f4:	82 e6       	ldi	r24, 0x62	; 98
 5f6:	91 e0       	ldi	r25, 0x01	; 1
 5f8:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 5fc:	8c e0       	ldi	r24, 0x0C	; 12
 5fe:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 7;
 602:	87 e0       	ldi	r24, 0x07	; 7
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 60a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row =0;
 60e:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 612:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 616:	08 95       	ret

00000618 <TrebleClip>:
}
void TrebleClip(){
	lcd_cmd(0x01);
 618:	81 e0       	ldi	r24, 0x01	; 1
 61a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 61e:	80 e8       	ldi	r24, 0x80	; 128
 620:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 624:	84 e1       	ldi	r24, 0x14	; 20
 626:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Treble");
 62a:	87 e6       	ldi	r24, 0x67	; 103
 62c:	91 e0       	ldi	r25, 0x01	; 1
 62e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0x0C);
 632:	8c e0       	ldi	r24, 0x0C	; 12
 634:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	Screen = 8;
 638:	88 e0       	ldi	r24, 0x08	; 8
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 640:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
	Row =0;
 644:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 648:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 64c:	08 95       	ret

0000064e <NEXT>:
		
	}
}

void NEXT(){
	if (SELval ==8 && Screen == 2 && Row == 2){
 64e:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 652:	88 30       	cpi	r24, 0x08	; 8
 654:	a1 f4       	brne	.+40     	; 0x67e <NEXT+0x30>
 656:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 65a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 65e:	02 97       	sbiw	r24, 0x02	; 2
 660:	71 f4       	brne	.+28     	; 0x67e <NEXT+0x30>
 662:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 666:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 66a:	02 97       	sbiw	r24, 0x02	; 2
 66c:	41 f4       	brne	.+16     	; 0x67e <NEXT+0x30>
		PlayBackAudioII();
 66e:	0e 94 19 02 	call	0x432	; 0x432 <PlayBackAudioII>
		filenumber = 2;
 672:	82 e0       	ldi	r24, 0x02	; 2
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 67a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
	if (SELval == 8  && Screen == 3 && Row == 2){
 67e:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 682:	88 30       	cpi	r24, 0x08	; 8
 684:	a1 f4       	brne	.+40     	; 0x6ae <NEXT+0x60>
 686:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 68a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 68e:	03 97       	sbiw	r24, 0x03	; 3
 690:	71 f4       	brne	.+28     	; 0x6ae <NEXT+0x60>
 692:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 696:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 69a:	02 97       	sbiw	r24, 0x02	; 2
 69c:	41 f4       	brne	.+16     	; 0x6ae <NEXT+0x60>
		PlayBackAudioIII();
 69e:	0e 94 34 02 	call	0x468	; 0x468 <PlayBackAudioIII>
		filenumber = 3;
 6a2:	83 e0       	ldi	r24, 0x03	; 3
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
	if (SELval ==8 && Screen == 4 && Row == 2){
 6ae:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 6b2:	88 30       	cpi	r24, 0x08	; 8
 6b4:	a1 f4       	brne	.+40     	; 0x6de <NEXT+0x90>
 6b6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 6ba:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 6be:	04 97       	sbiw	r24, 0x04	; 4
 6c0:	71 f4       	brne	.+28     	; 0x6de <NEXT+0x90>
 6c2:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 6c6:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 6ca:	02 97       	sbiw	r24, 0x02	; 2
 6cc:	41 f4       	brne	.+16     	; 0x6de <NEXT+0x90>
		PlayBackAudioIV();
 6ce:	0e 94 4f 02 	call	0x49e	; 0x49e <PlayBackAudioIV>
		filenumber = 4;
 6d2:	84 e0       	ldi	r24, 0x04	; 4
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6da:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
	if (SELval == 8 && Screen == 100 && Row == 2){
 6de:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 6e2:	88 30       	cpi	r24, 0x08	; 8
 6e4:	a9 f4       	brne	.+42     	; 0x710 <NEXT+0xc2>
 6e6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 6ea:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 6ee:	84 36       	cpi	r24, 0x64	; 100
 6f0:	91 05       	cpc	r25, r1
 6f2:	71 f4       	brne	.+28     	; 0x710 <NEXT+0xc2>
 6f4:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 6f8:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 6fc:	02 97       	sbiw	r24, 0x02	; 2
 6fe:	41 f4       	brne	.+16     	; 0x710 <NEXT+0xc2>
		DeleteAudioII();
 700:	0e 94 85 02 	call	0x50a	; 0x50a <DeleteAudioII>
		filenumber = 2;
 704:	82 e0       	ldi	r24, 0x02	; 2
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 70c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
	if (SELval ==8 && Screen == 101 && Row == 2){
 710:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 714:	88 30       	cpi	r24, 0x08	; 8
 716:	a9 f4       	brne	.+42     	; 0x742 <NEXT+0xf4>
 718:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 71c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 720:	85 36       	cpi	r24, 0x65	; 101
 722:	91 05       	cpc	r25, r1
 724:	71 f4       	brne	.+28     	; 0x742 <NEXT+0xf4>
 726:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 72a:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 72e:	02 97       	sbiw	r24, 0x02	; 2
 730:	41 f4       	brne	.+16     	; 0x742 <NEXT+0xf4>
		DeleteAudioIII();
 732:	0e 94 a0 02 	call	0x540	; 0x540 <DeleteAudioIII>
		filenumber = 3;
 736:	83 e0       	ldi	r24, 0x03	; 3
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 73e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
	if (SELval ==8 && Screen == 102 && Row == 2){
 742:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 746:	88 30       	cpi	r24, 0x08	; 8
 748:	a9 f4       	brne	.+42     	; 0x774 <NEXT+0x126>
 74a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 74e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 752:	86 36       	cpi	r24, 0x66	; 102
 754:	91 05       	cpc	r25, r1
 756:	71 f4       	brne	.+28     	; 0x774 <NEXT+0x126>
 758:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 75c:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 760:	02 97       	sbiw	r24, 0x02	; 2
 762:	41 f4       	brne	.+16     	; 0x774 <NEXT+0x126>
		DeleteAudioIV();
 764:	0e 94 bb 02 	call	0x576	; 0x576 <DeleteAudioIV>
		filenumber = 4;
 768:	84 e0       	ldi	r24, 0x04	; 4
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 770:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
	if (SELval == 8 && Screen == 6 && Row == 2){
 774:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 778:	88 30       	cpi	r24, 0x08	; 8
 77a:	71 f4       	brne	.+28     	; 0x798 <NEXT+0x14a>
 77c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 780:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 784:	06 97       	sbiw	r24, 0x06	; 6
 786:	41 f4       	brne	.+16     	; 0x798 <NEXT+0x14a>
 788:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 78c:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 790:	02 97       	sbiw	r24, 0x02	; 2
 792:	11 f4       	brne	.+4      	; 0x798 <NEXT+0x14a>
		BassClip();
 794:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <BassClip>
	}
	if (SELval ==8 && Screen == 7 && Row == 2){
 798:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 79c:	88 30       	cpi	r24, 0x08	; 8
 79e:	71 f4       	brne	.+28     	; 0x7bc <NEXT+0x16e>
 7a0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 7a4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 7a8:	07 97       	sbiw	r24, 0x07	; 7
 7aa:	41 f4       	brne	.+16     	; 0x7bc <NEXT+0x16e>
 7ac:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 7b0:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 7b4:	02 97       	sbiw	r24, 0x02	; 2
 7b6:	11 f4       	brne	.+4      	; 0x7bc <NEXT+0x16e>
		TrebleClip();
 7b8:	0e 94 0c 03 	call	0x618	; 0x618 <TrebleClip>
 7bc:	08 95       	ret

000007be <PlayClipII>:
	Screen = 8;
	Row =0;
}
void PlayClipII(){
	
	if ((SELval == 8) && (Row == 1) && (Screen == 6)){
 7be:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 7c2:	88 30       	cpi	r24, 0x08	; 8
 7c4:	09 f0       	breq	.+2      	; 0x7c8 <PlayClipII+0xa>
 7c6:	70 c0       	rjmp	.+224    	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 7c8:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 7cc:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 7d0:	01 97       	sbiw	r24, 0x01	; 1
 7d2:	09 f0       	breq	.+2      	; 0x7d6 <PlayClipII+0x18>
 7d4:	69 c0       	rjmp	.+210    	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 7d6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 7da:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 7de:	06 97       	sbiw	r24, 0x06	; 6
 7e0:	09 f0       	breq	.+2      	; 0x7e4 <PlayClipII+0x26>
 7e2:	62 c0       	rjmp	.+196    	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
		lcd_cmd(0x01);
 7e4:	81 e0       	ldi	r24, 0x01	; 1
 7e6:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 7ea:	80 e8       	ldi	r24, 0x80	; 128
 7ec:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 7f0:	84 e1       	ldi	r24, 0x14	; 20
 7f2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Playing");
 7f6:	8e e6       	ldi	r24, 0x6E	; 110
 7f8:	91 e0       	ldi	r25, 0x01	; 1
 7fa:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 7fe:	80 ec       	ldi	r24, 0xC0	; 192
 800:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 804:	84 e1       	ldi	r24, 0x14	; 20
 806:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		if (filenumber==1){
 80a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 80e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 812:	01 97       	sbiw	r24, 0x01	; 1
 814:	21 f4       	brne	.+8      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
			lcd_msg("Audio 1"); 
 816:	88 e3       	ldi	r24, 0x38	; 56
 818:	91 e0       	ldi	r25, 0x01	; 1
 81a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==2){
 81e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 822:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 826:	02 97       	sbiw	r24, 0x02	; 2
 828:	21 f4       	brne	.+8      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
			lcd_msg("Audio 2"); 
 82a:	80 e4       	ldi	r24, 0x40	; 64
 82c:	91 e0       	ldi	r25, 0x01	; 1
 82e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==3){
 832:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 836:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 83a:	03 97       	sbiw	r24, 0x03	; 3
 83c:	21 f4       	brne	.+8      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
			lcd_msg("Audio 3"); 
 83e:	88 e4       	ldi	r24, 0x48	; 72
 840:	91 e0       	ldi	r25, 0x01	; 1
 842:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==4){
 846:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 84a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 84e:	04 97       	sbiw	r24, 0x04	; 4
 850:	21 f4       	brne	.+8      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
			lcd_msg("Audio 4"); 
 852:	80 e5       	ldi	r24, 0x50	; 80
 854:	91 e0       	ldi	r25, 0x01	; 1
 856:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		lcd_cmd(0x0C);
 85a:	8c e0       	ldi	r24, 0x0C	; 12
 85c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 860:	2f ef       	ldi	r18, 0xFF	; 255
 862:	87 ea       	ldi	r24, 0xA7	; 167
 864:	91 e6       	ldi	r25, 0x61	; 97
 866:	21 50       	subi	r18, 0x01	; 1
 868:	80 40       	sbci	r24, 0x00	; 0
 86a:	90 40       	sbci	r25, 0x00	; 0
 86c:	e1 f7       	brne	.-8      	; 0x866 <__DATA_REGION_LENGTH__+0x66>
 86e:	00 c0       	rjmp	.+0      	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 870:	00 00       	nop
		_delay_ms(2000);
		lcd_cmd(0x01);
 872:	81 e0       	ldi	r24, 0x01	; 1
 874:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 878:	80 e8       	ldi	r24, 0x80	; 128
 87a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 87e:	84 e1       	ldi	r24, 0x14	; 20
 880:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("end");
 884:	86 e7       	ldi	r24, 0x76	; 118
 886:	91 e0       	ldi	r25, 0x01	; 1
 888:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0x0C);
 88c:	8c e0       	ldi	r24, 0x0C	; 12
 88e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 892:	2f ef       	ldi	r18, 0xFF	; 255
 894:	83 ed       	ldi	r24, 0xD3	; 211
 896:	90 e3       	ldi	r25, 0x30	; 48
 898:	21 50       	subi	r18, 0x01	; 1
 89a:	80 40       	sbci	r24, 0x00	; 0
 89c:	90 40       	sbci	r25, 0x00	; 0
 89e:	e1 f7       	brne	.-8      	; 0x898 <__DATA_REGION_LENGTH__+0x98>
 8a0:	00 c0       	rjmp	.+0      	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
 8a2:	00 00       	nop
		_delay_ms(1000);
		Menu();
 8a4:	0e 94 9f 01 	call	0x33e	; 0x33e <Menu>
	}
	if ((SELval == 8) && (Row == 1) && (Screen == 7)){
 8a8:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 8ac:	88 30       	cpi	r24, 0x08	; 8
 8ae:	09 f0       	breq	.+2      	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 8b0:	62 c0       	rjmp	.+196    	; 0x976 <__stack+0x77>
 8b2:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 8b6:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 8ba:	01 97       	sbiw	r24, 0x01	; 1
 8bc:	09 f0       	breq	.+2      	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
 8be:	5b c0       	rjmp	.+182    	; 0x976 <__stack+0x77>
 8c0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 8c4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 8c8:	07 97       	sbiw	r24, 0x07	; 7
 8ca:	09 f0       	breq	.+2      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8cc:	54 c0       	rjmp	.+168    	; 0x976 <__stack+0x77>
		lcd_cmd(0x01);
 8ce:	81 e0       	ldi	r24, 0x01	; 1
 8d0:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 8d4:	80 e8       	ldi	r24, 0x80	; 128
 8d6:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 8da:	84 e1       	ldi	r24, 0x14	; 20
 8dc:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		if (filenumber==1){
 8e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8e4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8e8:	01 97       	sbiw	r24, 0x01	; 1
 8ea:	21 f4       	brne	.+8      	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
			lcd_msg("Audio 1");
 8ec:	88 e3       	ldi	r24, 0x38	; 56
 8ee:	91 e0       	ldi	r25, 0x01	; 1
 8f0:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==2){
 8f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8f8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8fc:	02 97       	sbiw	r24, 0x02	; 2
 8fe:	21 f4       	brne	.+8      	; 0x908 <__stack+0x9>
			lcd_msg("Audio 2");
 900:	80 e4       	ldi	r24, 0x40	; 64
 902:	91 e0       	ldi	r25, 0x01	; 1
 904:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==3){
 908:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 90c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 910:	03 97       	sbiw	r24, 0x03	; 3
 912:	21 f4       	brne	.+8      	; 0x91c <__stack+0x1d>
			lcd_msg("Audio 3");
 914:	88 e4       	ldi	r24, 0x48	; 72
 916:	91 e0       	ldi	r25, 0x01	; 1
 918:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==4){
 91c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 920:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 924:	04 97       	sbiw	r24, 0x04	; 4
 926:	21 f4       	brne	.+8      	; 0x930 <__stack+0x31>
			lcd_msg("Audio 4");
 928:	80 e5       	ldi	r24, 0x50	; 80
 92a:	91 e0       	ldi	r25, 0x01	; 1
 92c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		lcd_cmd(0xC0);
 930:	80 ec       	ldi	r24, 0xC0	; 192
 932:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("with Bass Effect");
 936:	8a e7       	ldi	r24, 0x7A	; 122
 938:	91 e0       	ldi	r25, 0x01	; 1
 93a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0x0C);
 93e:	8c e0       	ldi	r24, 0x0C	; 12
 940:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 944:	2f ef       	ldi	r18, 0xFF	; 255
 946:	87 ea       	ldi	r24, 0xA7	; 167
 948:	91 e6       	ldi	r25, 0x61	; 97
 94a:	21 50       	subi	r18, 0x01	; 1
 94c:	80 40       	sbci	r24, 0x00	; 0
 94e:	90 40       	sbci	r25, 0x00	; 0
 950:	e1 f7       	brne	.-8      	; 0x94a <__stack+0x4b>
 952:	00 c0       	rjmp	.+0      	; 0x954 <__stack+0x55>
 954:	00 00       	nop
		_delay_ms(2000);
		lcd_cmd(0x01);
 956:	81 e0       	ldi	r24, 0x01	; 1
 958:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 95c:	80 e8       	ldi	r24, 0x80	; 128
 95e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 962:	84 e1       	ldi	r24, 0x14	; 20
 964:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("end");
 968:	86 e7       	ldi	r24, 0x76	; 118
 96a:	91 e0       	ldi	r25, 0x01	; 1
 96c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0x0C);
 970:	8c e0       	ldi	r24, 0x0C	; 12
 972:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		
	}
	if ((SELval == 8) && (Row == 1) && (Screen == 8)){
 976:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 97a:	88 30       	cpi	r24, 0x08	; 8
 97c:	09 f0       	breq	.+2      	; 0x980 <__stack+0x81>
 97e:	62 c0       	rjmp	.+196    	; 0xa44 <__stack+0x145>
 980:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 984:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 988:	01 97       	sbiw	r24, 0x01	; 1
 98a:	09 f0       	breq	.+2      	; 0x98e <__stack+0x8f>
 98c:	5b c0       	rjmp	.+182    	; 0xa44 <__stack+0x145>
 98e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 992:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 996:	08 97       	sbiw	r24, 0x08	; 8
 998:	09 f0       	breq	.+2      	; 0x99c <__stack+0x9d>
 99a:	54 c0       	rjmp	.+168    	; 0xa44 <__stack+0x145>
		lcd_cmd(0x01);
 99c:	81 e0       	ldi	r24, 0x01	; 1
 99e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 9a2:	80 e8       	ldi	r24, 0x80	; 128
 9a4:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 9a8:	84 e1       	ldi	r24, 0x14	; 20
 9aa:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		if (filenumber==1){
 9ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 9b2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 9b6:	01 97       	sbiw	r24, 0x01	; 1
 9b8:	21 f4       	brne	.+8      	; 0x9c2 <__stack+0xc3>
			lcd_msg("Audio 1");
 9ba:	88 e3       	ldi	r24, 0x38	; 56
 9bc:	91 e0       	ldi	r25, 0x01	; 1
 9be:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==2){
 9c2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 9c6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 9ca:	02 97       	sbiw	r24, 0x02	; 2
 9cc:	21 f4       	brne	.+8      	; 0x9d6 <__stack+0xd7>
			lcd_msg("Audio 2");
 9ce:	80 e4       	ldi	r24, 0x40	; 64
 9d0:	91 e0       	ldi	r25, 0x01	; 1
 9d2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==3){
 9d6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 9da:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 9de:	03 97       	sbiw	r24, 0x03	; 3
 9e0:	21 f4       	brne	.+8      	; 0x9ea <__stack+0xeb>
			lcd_msg("Audio 3");
 9e2:	88 e4       	ldi	r24, 0x48	; 72
 9e4:	91 e0       	ldi	r25, 0x01	; 1
 9e6:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==4){
 9ea:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 9ee:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 9f2:	04 97       	sbiw	r24, 0x04	; 4
 9f4:	21 f4       	brne	.+8      	; 0x9fe <__stack+0xff>
			lcd_msg("Audio 4");
 9f6:	80 e5       	ldi	r24, 0x50	; 80
 9f8:	91 e0       	ldi	r25, 0x01	; 1
 9fa:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		lcd_cmd(0xC0);
 9fe:	80 ec       	ldi	r24, 0xC0	; 192
 a00:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("with Treble Effect");
 a04:	8b e8       	ldi	r24, 0x8B	; 139
 a06:	91 e0       	ldi	r25, 0x01	; 1
 a08:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0x0C);
 a0c:	8c e0       	ldi	r24, 0x0C	; 12
 a0e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 a12:	2f ef       	ldi	r18, 0xFF	; 255
 a14:	87 ea       	ldi	r24, 0xA7	; 167
 a16:	91 e6       	ldi	r25, 0x61	; 97
 a18:	21 50       	subi	r18, 0x01	; 1
 a1a:	80 40       	sbci	r24, 0x00	; 0
 a1c:	90 40       	sbci	r25, 0x00	; 0
 a1e:	e1 f7       	brne	.-8      	; 0xa18 <__stack+0x119>
 a20:	00 c0       	rjmp	.+0      	; 0xa22 <__stack+0x123>
 a22:	00 00       	nop
		_delay_ms(2000);
		lcd_cmd(0x01);
 a24:	81 e0       	ldi	r24, 0x01	; 1
 a26:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 a2a:	80 e8       	ldi	r24, 0x80	; 128
 a2c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 a30:	84 e1       	ldi	r24, 0x14	; 20
 a32:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("end");
 a36:	86 e7       	ldi	r24, 0x76	; 118
 a38:	91 e0       	ldi	r25, 0x01	; 1
 a3a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0x0C);
 a3e:	8c e0       	ldi	r24, 0x0C	; 12
 a40:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 a44:	08 95       	ret

00000a46 <DeleteClipI>:
	}
}
void DeleteClipI(){
	if ((SELval == 8) && (Row != 0) && (Screen >=100 && Screen <=103)){
 a46:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 a4a:	88 30       	cpi	r24, 0x08	; 8
 a4c:	91 f5       	brne	.+100    	; 0xab2 <DeleteClipI+0x6c>
 a4e:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 a52:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 a56:	89 2b       	or	r24, r25
 a58:	61 f1       	breq	.+88     	; 0xab2 <DeleteClipI+0x6c>
 a5a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 a5e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 a62:	84 56       	subi	r24, 0x64	; 100
 a64:	91 09       	sbc	r25, r1
 a66:	04 97       	sbiw	r24, 0x04	; 4
 a68:	20 f5       	brcc	.+72     	; 0xab2 <DeleteClipI+0x6c>
		lcd_cmd(0x01);
 a6a:	81 e0       	ldi	r24, 0x01	; 1
 a6c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 a70:	80 e8       	ldi	r24, 0x80	; 128
 a72:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 a76:	84 e1       	ldi	r24, 0x14	; 20
 a78:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Confirm");
 a7c:	8e e9       	ldi	r24, 0x9E	; 158
 a7e:	91 e0       	ldi	r25, 0x01	; 1
 a80:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 a84:	80 ec       	ldi	r24, 0xC0	; 192
 a86:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 a8a:	84 e1       	ldi	r24, 0x14	; 20
 a8c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Cancel");
 a90:	86 ea       	ldi	r24, 0xA6	; 166
 a92:	91 e0       	ldi	r25, 0x01	; 1
 a94:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0x0C);
 a98:	8c e0       	ldi	r24, 0x0C	; 12
 a9a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		Screen = 104;
 a9e:	88 e6       	ldi	r24, 0x68	; 104
 aa0:	90 e0       	ldi	r25, 0x00	; 0
 aa2:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Screen+0x1>
 aa6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Screen>
		Row = 0;
 aaa:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
 aae:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
 ab2:	08 95       	ret

00000ab4 <DeleteClipII>:
	}
}

void DeleteClipII(){
	if ((SELval == 8 ) && (Screen == 104) && (Row ==1)){
 ab4:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 ab8:	88 30       	cpi	r24, 0x08	; 8
 aba:	09 f0       	breq	.+2      	; 0xabe <DeleteClipII+0xa>
 abc:	58 c0       	rjmp	.+176    	; 0xb6e <DeleteClipII+0xba>
 abe:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 ac2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 ac6:	88 36       	cpi	r24, 0x68	; 104
 ac8:	91 05       	cpc	r25, r1
 aca:	09 f0       	breq	.+2      	; 0xace <DeleteClipII+0x1a>
 acc:	50 c0       	rjmp	.+160    	; 0xb6e <DeleteClipII+0xba>
 ace:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 ad2:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 ad6:	01 97       	sbiw	r24, 0x01	; 1
 ad8:	09 f0       	breq	.+2      	; 0xadc <DeleteClipII+0x28>
 ada:	49 c0       	rjmp	.+146    	; 0xb6e <DeleteClipII+0xba>
		lcd_cmd(0x01);
 adc:	81 e0       	ldi	r24, 0x01	; 1
 ade:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 ae2:	80 e8       	ldi	r24, 0x80	; 128
 ae4:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 ae8:	84 e1       	ldi	r24, 0x14	; 20
 aea:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Deleted");
 aee:	8d ea       	ldi	r24, 0xAD	; 173
 af0:	91 e0       	ldi	r25, 0x01	; 1
 af2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 af6:	80 ec       	ldi	r24, 0xC0	; 192
 af8:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 afc:	84 e1       	ldi	r24, 0x14	; 20
 afe:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		if (filenumber==1){
 b02:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b06:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b0a:	01 97       	sbiw	r24, 0x01	; 1
 b0c:	21 f4       	brne	.+8      	; 0xb16 <DeleteClipII+0x62>
			lcd_msg("Audio 1");
 b0e:	88 e3       	ldi	r24, 0x38	; 56
 b10:	91 e0       	ldi	r25, 0x01	; 1
 b12:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==2){
 b16:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b1a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b1e:	02 97       	sbiw	r24, 0x02	; 2
 b20:	21 f4       	brne	.+8      	; 0xb2a <DeleteClipII+0x76>
			lcd_msg("Audio 2");
 b22:	80 e4       	ldi	r24, 0x40	; 64
 b24:	91 e0       	ldi	r25, 0x01	; 1
 b26:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==3){
 b2a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b2e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b32:	03 97       	sbiw	r24, 0x03	; 3
 b34:	21 f4       	brne	.+8      	; 0xb3e <DeleteClipII+0x8a>
			lcd_msg("Audio 3");
 b36:	88 e4       	ldi	r24, 0x48	; 72
 b38:	91 e0       	ldi	r25, 0x01	; 1
 b3a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		if (filenumber==4){
 b3e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b42:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b46:	04 97       	sbiw	r24, 0x04	; 4
 b48:	21 f4       	brne	.+8      	; 0xb52 <DeleteClipII+0x9e>
			lcd_msg("Audio 4");
 b4a:	80 e5       	ldi	r24, 0x50	; 80
 b4c:	91 e0       	ldi	r25, 0x01	; 1
 b4e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		}
		lcd_cmd(0x0C);
 b52:	8c e0       	ldi	r24, 0x0C	; 12
 b54:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 b58:	2f ef       	ldi	r18, 0xFF	; 255
 b5a:	83 ed       	ldi	r24, 0xD3	; 211
 b5c:	90 e3       	ldi	r25, 0x30	; 48
 b5e:	21 50       	subi	r18, 0x01	; 1
 b60:	80 40       	sbci	r24, 0x00	; 0
 b62:	90 40       	sbci	r25, 0x00	; 0
 b64:	e1 f7       	brne	.-8      	; 0xb5e <DeleteClipII+0xaa>
 b66:	00 c0       	rjmp	.+0      	; 0xb68 <DeleteClipII+0xb4>
 b68:	00 00       	nop
		_delay_ms(1000);
		Menu();
 b6a:	0e 94 9f 01 	call	0x33e	; 0x33e <Menu>
 b6e:	08 95       	ret

00000b70 <Back>:
	}
}
void Back(){
	if ((BACKval == 16) && ((Screen >= 2 && Screen <=5) || (Screen >= 100 && Screen <=103))){
 b70:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <BACKval>
 b74:	80 31       	cpi	r24, 0x10	; 16
 b76:	81 f4       	brne	.+32     	; 0xb98 <Back+0x28>
 b78:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 b7c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 b80:	9c 01       	movw	r18, r24
 b82:	22 50       	subi	r18, 0x02	; 2
 b84:	31 09       	sbc	r19, r1
 b86:	24 30       	cpi	r18, 0x04	; 4
 b88:	31 05       	cpc	r19, r1
 b8a:	20 f0       	brcs	.+8      	; 0xb94 <Back+0x24>
 b8c:	84 56       	subi	r24, 0x64	; 100
 b8e:	91 09       	sbc	r25, r1
 b90:	04 97       	sbiw	r24, 0x04	; 4
 b92:	10 f4       	brcc	.+4      	; 0xb98 <Back+0x28>
		Menu();
 b94:	0e 94 9f 01 	call	0x33e	; 0x33e <Menu>
	}
	if ((BACKval == 16) && (Screen >= 6) && (Screen <=8)){
 b98:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <BACKval>
 b9c:	80 31       	cpi	r24, 0x10	; 16
 b9e:	59 f4       	brne	.+22     	; 0xbb6 <Back+0x46>
 ba0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 ba4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 ba8:	86 30       	cpi	r24, 0x06	; 6
 baa:	91 05       	cpc	r25, r1
 bac:	24 f0       	brlt	.+8      	; 0xbb6 <Back+0x46>
 bae:	09 97       	sbiw	r24, 0x09	; 9
 bb0:	14 f4       	brge	.+4      	; 0xbb6 <Back+0x46>
		PlayBackAudioI();
 bb2:	0e 94 fe 01 	call	0x3fc	; 0x3fc <PlayBackAudioI>
 bb6:	08 95       	ret

00000bb8 <main>:
void NEXT();


int main(void)
{
	DDRD &=~((1<<PIND0)|(1<<PIND1)|(1<<PIND2)|(1<<PIND3)|(1<<PIND4)) ;
 bb8:	8a b1       	in	r24, 0x0a	; 10
 bba:	80 7e       	andi	r24, 0xE0	; 224
 bbc:	8a b9       	out	0x0a, r24	; 10
	i2c_init();
 bbe:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
	i2c_start();
 bc2:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_start>
	i2c_write(0x70);
 bc6:	80 e7       	ldi	r24, 0x70	; 112
 bc8:	0e 94 64 00 	call	0xc8	; 0xc8 <i2c_write>
	lcd_init();
 bcc:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
	lcd_msg("Voice Recorder");
 bd0:	85 eb       	ldi	r24, 0xB5	; 181
 bd2:	91 e0       	ldi	r25, 0x01	; 1
 bd4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 bd8:	2f ef       	ldi	r18, 0xFF	; 255
 bda:	80 e7       	ldi	r24, 0x70	; 112
 bdc:	92 e0       	ldi	r25, 0x02	; 2
 bde:	21 50       	subi	r18, 0x01	; 1
 be0:	80 40       	sbci	r24, 0x00	; 0
 be2:	90 40       	sbci	r25, 0x00	; 0
 be4:	e1 f7       	brne	.-8      	; 0xbde <main+0x26>
 be6:	00 c0       	rjmp	.+0      	; 0xbe8 <main+0x30>
 be8:	00 00       	nop
	_delay_ms(50);
	Menu();
 bea:	0e 94 9f 01 	call	0x33e	; 0x33e <Menu>
	/* Replace with your application code */
	while (1)
	{
		RECval = PIND & (1<<PIND0); /*1*/
 bee:	89 b1       	in	r24, 0x09	; 9
 bf0:	81 70       	andi	r24, 0x01	; 1
 bf2:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <RECval>
		UPval = PIND & (1<<PIND1);/*2*/
 bf6:	89 b1       	in	r24, 0x09	; 9
 bf8:	82 70       	andi	r24, 0x02	; 2
 bfa:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <UPval>
		DOWNval = PIND & (1<<PIND2);//4
 bfe:	89 b1       	in	r24, 0x09	; 9
 c00:	84 70       	andi	r24, 0x04	; 4
 c02:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <DOWNval>
		SELval = PIND & (1<<PIND3);//8
 c06:	89 b1       	in	r24, 0x09	; 9
 c08:	88 70       	andi	r24, 0x08	; 8
 c0a:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <SELval>
		BACKval = PIND & (1<<PIND4); //16
 c0e:	89 b1       	in	r24, 0x09	; 9
 c10:	80 71       	andi	r24, 0x10	; 16
 c12:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <BACKval>
		Recording();
 c16:	0e 94 c4 01 	call	0x388	; 0x388 <Recording>
		Navigate();
 c1a:	0e 94 7e 01 	call	0x2fc	; 0x2fc <Navigate>
		if ((SELval == 8) && (Screen == 1) && (Row == 1)){
 c1e:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 c22:	88 30       	cpi	r24, 0x08	; 8
 c24:	a1 f4       	brne	.+40     	; 0xc4e <main+0x96>
 c26:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 c2a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 c2e:	01 97       	sbiw	r24, 0x01	; 1
 c30:	71 f4       	brne	.+28     	; 0xc4e <main+0x96>
 c32:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 c36:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 c3a:	01 97       	sbiw	r24, 0x01	; 1
 c3c:	41 f4       	brne	.+16     	; 0xc4e <main+0x96>
			PlayBackAudioI();
 c3e:	0e 94 fe 01 	call	0x3fc	; 0x3fc <PlayBackAudioI>
			filenumber = 1;
 c42:	81 e0       	ldi	r24, 0x01	; 1
 c44:	90 e0       	ldi	r25, 0x00	; 0
 c46:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 c4a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
		if ((SELval == 8) && (Screen == 1) && (Row == 2)){
 c4e:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 c52:	88 30       	cpi	r24, 0x08	; 8
 c54:	a1 f4       	brne	.+40     	; 0xc7e <main+0xc6>
 c56:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 c5a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 c5e:	01 97       	sbiw	r24, 0x01	; 1
 c60:	71 f4       	brne	.+28     	; 0xc7e <main+0xc6>
 c62:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 c66:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 c6a:	02 97       	sbiw	r24, 0x02	; 2
 c6c:	41 f4       	brne	.+16     	; 0xc7e <main+0xc6>
			DeleteAudioI();
 c6e:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <DeleteAudioI>
			filenumber = 1;
 c72:	81 e0       	ldi	r24, 0x01	; 1
 c74:	90 e0       	ldi	r25, 0x00	; 0
 c76:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 c7a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
		if (SELval == 8 && Screen >=2 && Screen<=5 && Row == 1){
 c7e:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <SELval>
 c82:	88 30       	cpi	r24, 0x08	; 8
 c84:	89 f4       	brne	.+34     	; 0xca8 <main+0xf0>
 c86:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Screen>
 c8a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Screen+0x1>
 c8e:	82 30       	cpi	r24, 0x02	; 2
 c90:	91 05       	cpc	r25, r1
 c92:	54 f0       	brlt	.+20     	; 0xca8 <main+0xf0>
 c94:	06 97       	sbiw	r24, 0x06	; 6
 c96:	44 f4       	brge	.+16     	; 0xca8 <main+0xf0>
 c98:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
 c9c:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
 ca0:	01 97       	sbiw	r24, 0x01	; 1
 ca2:	11 f4       	brne	.+4      	; 0xca8 <main+0xf0>
			NPlayClip();
 ca4:	0e 94 d6 02 	call	0x5ac	; 0x5ac <NPlayClip>
		}
		NEXT();
 ca8:	0e 94 27 03 	call	0x64e	; 0x64e <NEXT>
		PlayClipII();
 cac:	0e 94 df 03 	call	0x7be	; 0x7be <PlayClipII>
		DeleteClipI();
 cb0:	0e 94 23 05 	call	0xa46	; 0xa46 <DeleteClipI>
		DeleteClipII();
 cb4:	0e 94 5a 05 	call	0xab4	; 0xab4 <DeleteClipII>
		Back();
 cb8:	0e 94 b8 05 	call	0xb70	; 0xb70 <Back>
		
	}
 cbc:	98 cf       	rjmp	.-208    	; 0xbee <main+0x36>

00000cbe <_exit>:
 cbe:	f8 94       	cli

00000cc0 <__stop_program>:
 cc0:	ff cf       	rjmp	.-2      	; 0xcc0 <__stop_program>
