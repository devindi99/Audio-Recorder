
i2c_lcd_atmega328p.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000aa  00800100  00000804  00000898  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000804  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  008001aa  008001aa  00000942  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000942  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000974  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  000009b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000135f  00000000  00000000  00000a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000786  00000000  00000000  00001deb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ad0  00000000  00000000  00002571  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00003044  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ae  00000000  00000000  00003200  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002fc  00000000  00000000  000036ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000039aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e0       	ldi	r30, 0x04	; 4
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 3a       	cpi	r26, 0xAA	; 170
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa ea       	ldi	r26, 0xAA	; 170
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 3b       	cpi	r26, 0xB1	; 177
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a1 03 	call	0x742	; 0x742 <main>
  9e:	0c 94 00 04 	jmp	0x800	; 0x800 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //----Command for Left Shift
	delay(200);
  a6:	82 e6       	ldi	r24, 0x62	; 98
  a8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  ac:	84 e0       	ldi	r24, 0x04	; 4
  ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  b6:	08 95       	ret

000000b8 <i2c_start>:
  b8:	84 ea       	ldi	r24, 0xA4	; 164
  ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  c2:	88 23       	and	r24, r24
  c4:	e4 f7       	brge	.-8      	; 0xbe <i2c_start+0x6>
  c6:	08 95       	ret

000000c8 <i2c_write>:
  c8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  cc:	84 e8       	ldi	r24, 0x84	; 132
  ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d6:	88 23       	and	r24, r24
  d8:	e4 f7       	brge	.-8      	; 0xd2 <i2c_write+0xa>
  da:	08 95       	ret

000000dc <delay>:
  dc:	40 e0       	ldi	r20, 0x00	; 0
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	0a c0       	rjmp	.+20     	; 0xf6 <delay+0x1a>
  e2:	2f 5f       	subi	r18, 0xFF	; 255
  e4:	3f 4f       	sbci	r19, 0xFF	; 255
  e6:	02 c0       	rjmp	.+4      	; 0xec <delay+0x10>
  e8:	20 e0       	ldi	r18, 0x00	; 0
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	29 37       	cpi	r18, 0x79	; 121
  ee:	31 05       	cpc	r19, r1
  f0:	c4 f3       	brlt	.-16     	; 0xe2 <delay+0x6>
  f2:	4f 5f       	subi	r20, 0xFF	; 255
  f4:	5f 4f       	sbci	r21, 0xFF	; 255
  f6:	84 17       	cp	r24, r20
  f8:	95 07       	cpc	r25, r21
  fa:	b4 f7       	brge	.-20     	; 0xe8 <delay+0xc>
  fc:	08 95       	ret

000000fe <toggle>:
  fe:	eb eb       	ldi	r30, 0xBB	; 187
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	82 60       	ori	r24, 0x02	; 2
 106:	80 83       	st	Z, r24
 108:	84 e8       	ldi	r24, 0x84	; 132
 10a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 10e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 112:	88 23       	and	r24, r24
 114:	e4 f7       	brge	.-8      	; 0x10e <toggle+0x10>
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 6e 00 	call	0xdc	; 0xdc <delay>
 11e:	eb eb       	ldi	r30, 0xBB	; 187
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	8d 7f       	andi	r24, 0xFD	; 253
 126:	80 83       	st	Z, r24
 128:	84 e8       	ldi	r24, 0x84	; 132
 12a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 12e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 132:	88 23       	and	r24, r24
 134:	e4 f7       	brge	.-8      	; 0x12e <toggle+0x30>
 136:	08 95       	ret

00000138 <lcd_cmd_hf>:
 138:	eb eb       	ldi	r30, 0xBB	; 187
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	90 81       	ld	r25, Z
 13e:	9e 7f       	andi	r25, 0xFE	; 254
 140:	90 83       	st	Z, r25
 142:	94 e8       	ldi	r25, 0x84	; 132
 144:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 148:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 14c:	99 23       	and	r25, r25
 14e:	e4 f7       	brge	.-8      	; 0x148 <lcd_cmd_hf+0x10>
 150:	eb eb       	ldi	r30, 0xBB	; 187
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	90 81       	ld	r25, Z
 156:	9f 70       	andi	r25, 0x0F	; 15
 158:	90 83       	st	Z, r25
 15a:	94 e8       	ldi	r25, 0x84	; 132
 15c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 160:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 164:	99 23       	and	r25, r25
 166:	e4 f7       	brge	.-8      	; 0x160 <lcd_cmd_hf+0x28>
 168:	eb eb       	ldi	r30, 0xBB	; 187
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	90 81       	ld	r25, Z
 16e:	80 7f       	andi	r24, 0xF0	; 240
 170:	89 2b       	or	r24, r25
 172:	80 83       	st	Z, r24
 174:	84 e8       	ldi	r24, 0x84	; 132
 176:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17e:	88 23       	and	r24, r24
 180:	e4 f7       	brge	.-8      	; 0x17a <lcd_cmd_hf+0x42>
 182:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 186:	08 95       	ret

00000188 <lcd_cmd>:
 188:	cf 93       	push	r28
 18a:	c8 2f       	mov	r28, r24
 18c:	eb eb       	ldi	r30, 0xBB	; 187
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	8e 7f       	andi	r24, 0xFE	; 254
 194:	80 83       	st	Z, r24
 196:	84 e8       	ldi	r24, 0x84	; 132
 198:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 19c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a0:	88 23       	and	r24, r24
 1a2:	e4 f7       	brge	.-8      	; 0x19c <lcd_cmd+0x14>
 1a4:	eb eb       	ldi	r30, 0xBB	; 187
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	8f 70       	andi	r24, 0x0F	; 15
 1ac:	80 83       	st	Z, r24
 1ae:	84 e8       	ldi	r24, 0x84	; 132
 1b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b8:	88 23       	and	r24, r24
 1ba:	e4 f7       	brge	.-8      	; 0x1b4 <lcd_cmd+0x2c>
 1bc:	eb eb       	ldi	r30, 0xBB	; 187
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	9c 2f       	mov	r25, r28
 1c4:	90 7f       	andi	r25, 0xF0	; 240
 1c6:	89 2b       	or	r24, r25
 1c8:	80 83       	st	Z, r24
 1ca:	84 e8       	ldi	r24, 0x84	; 132
 1cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d4:	88 23       	and	r24, r24
 1d6:	e4 f7       	brge	.-8      	; 0x1d0 <lcd_cmd+0x48>
 1d8:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 1dc:	eb eb       	ldi	r30, 0xBB	; 187
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	8f 70       	andi	r24, 0x0F	; 15
 1e4:	80 83       	st	Z, r24
 1e6:	84 e8       	ldi	r24, 0x84	; 132
 1e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1f0:	88 23       	and	r24, r24
 1f2:	e4 f7       	brge	.-8      	; 0x1ec <lcd_cmd+0x64>
 1f4:	eb eb       	ldi	r30, 0xBB	; 187
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	20 81       	ld	r18, Z
 1fa:	30 e1       	ldi	r19, 0x10	; 16
 1fc:	c3 9f       	mul	r28, r19
 1fe:	c0 01       	movw	r24, r0
 200:	11 24       	eor	r1, r1
 202:	82 2b       	or	r24, r18
 204:	80 83       	st	Z, r24
 206:	84 e8       	ldi	r24, 0x84	; 132
 208:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 20c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 210:	88 23       	and	r24, r24
 212:	e4 f7       	brge	.-8      	; 0x20c <lcd_cmd+0x84>
 214:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 218:	cf 91       	pop	r28
 21a:	08 95       	ret

0000021c <lcd_init>:
 21c:	80 e3       	ldi	r24, 0x30	; 48
 21e:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 222:	80 e3       	ldi	r24, 0x30	; 48
 224:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 228:	80 e2       	ldi	r24, 0x20	; 32
 22a:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 22e:	88 e2       	ldi	r24, 0x28	; 40
 230:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 23a:	86 e0       	ldi	r24, 0x06	; 6
 23c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 240:	80 e8       	ldi	r24, 0x80	; 128
 242:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 246:	8f e0       	ldi	r24, 0x0F	; 15
 248:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 24c:	08 95       	ret

0000024e <lcd_dwr>:
 24e:	cf 93       	push	r28
 250:	c8 2f       	mov	r28, r24
 252:	eb eb       	ldi	r30, 0xBB	; 187
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	81 60       	ori	r24, 0x01	; 1
 25a:	80 83       	st	Z, r24
 25c:	84 e8       	ldi	r24, 0x84	; 132
 25e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 262:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 266:	88 23       	and	r24, r24
 268:	e4 f7       	brge	.-8      	; 0x262 <lcd_dwr+0x14>
 26a:	eb eb       	ldi	r30, 0xBB	; 187
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	8f 70       	andi	r24, 0x0F	; 15
 272:	80 83       	st	Z, r24
 274:	84 e8       	ldi	r24, 0x84	; 132
 276:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27e:	88 23       	and	r24, r24
 280:	e4 f7       	brge	.-8      	; 0x27a <lcd_dwr+0x2c>
 282:	eb eb       	ldi	r30, 0xBB	; 187
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	9c 2f       	mov	r25, r28
 28a:	90 7f       	andi	r25, 0xF0	; 240
 28c:	89 2b       	or	r24, r25
 28e:	80 83       	st	Z, r24
 290:	84 e8       	ldi	r24, 0x84	; 132
 292:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 296:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 29a:	88 23       	and	r24, r24
 29c:	e4 f7       	brge	.-8      	; 0x296 <lcd_dwr+0x48>
 29e:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2a2:	eb eb       	ldi	r30, 0xBB	; 187
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	80 81       	ld	r24, Z
 2a8:	8f 70       	andi	r24, 0x0F	; 15
 2aa:	80 83       	st	Z, r24
 2ac:	84 e8       	ldi	r24, 0x84	; 132
 2ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b6:	88 23       	and	r24, r24
 2b8:	e4 f7       	brge	.-8      	; 0x2b2 <lcd_dwr+0x64>
 2ba:	eb eb       	ldi	r30, 0xBB	; 187
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	20 81       	ld	r18, Z
 2c0:	30 e1       	ldi	r19, 0x10	; 16
 2c2:	c3 9f       	mul	r28, r19
 2c4:	c0 01       	movw	r24, r0
 2c6:	11 24       	eor	r1, r1
 2c8:	82 2b       	or	r24, r18
 2ca:	80 83       	st	Z, r24
 2cc:	84 e8       	ldi	r24, 0x84	; 132
 2ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d6:	88 23       	and	r24, r24
 2d8:	e4 f7       	brge	.-8      	; 0x2d2 <lcd_dwr+0x84>
 2da:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2de:	cf 91       	pop	r28
 2e0:	08 95       	ret

000002e2 <lcd_msg>:
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	ec 01       	movw	r28, r24
 2e8:	03 c0       	rjmp	.+6      	; 0x2f0 <lcd_msg+0xe>
 2ea:	21 96       	adiw	r28, 0x01	; 1
 2ec:	0e 94 27 01 	call	0x24e	; 0x24e <lcd_dwr>
 2f0:	88 81       	ld	r24, Y
 2f2:	81 11       	cpse	r24, r1
 2f4:	fa cf       	rjmp	.-12     	; 0x2ea <lcd_msg+0x8>
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	08 95       	ret

000002fc <Navigate>:
	Screen=1;
	}
}

void Navigate(){
	if (UPval==2)
 2fc:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <UPval>
 300:	82 30       	cpi	r24, 0x02	; 2
 302:	49 f4       	brne	.+18     	; 0x316 <Navigate+0x1a>
	{
		lcd_cmd(0x80);
 304:	80 e8       	ldi	r24, 0x80	; 128
 306:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		
		Row=1;
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <__data_end+0x1>
 312:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <__data_end>
		}
		
	if (DOWNval==4)
 316:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <DOWNval>
 31a:	84 30       	cpi	r24, 0x04	; 4
 31c:	49 f4       	brne	.+18     	; 0x330 <Navigate+0x34>
	{
	
		lcd_cmd(0xC0);
 31e:	80 ec       	ldi	r24, 0xC0	; 192
 320:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		
		Row=2;
 324:	82 e0       	ldi	r24, 0x02	; 2
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <__data_end+0x1>
 32c:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <__data_end>
 330:	08 95       	ret

00000332 <Menu>:
		
	}
}
void Menu(){
	lcd_cmd(0x01);
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 338:	80 e8       	ldi	r24, 0x80	; 128
 33a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 33e:	84 e1       	ldi	r24, 0x14	; 20
 340:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Playback audio");
 344:	82 e0       	ldi	r24, 0x02	; 2
 346:	91 e0       	ldi	r25, 0x01	; 1
 348:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0xC0);
 34c:	80 ec       	ldi	r24, 0xC0	; 192
 34e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 352:	84 e1       	ldi	r24, 0x14	; 20
 354:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Delete Audio");
 358:	81 e1       	ldi	r24, 0x11	; 17
 35a:	91 e0       	ldi	r25, 0x01	; 1
 35c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	Screen = 1;
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 368:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	Row = 0;
 36c:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 370:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 374:	08 95       	ret

00000376 <Recording>:
		DeleteClipII();
		Back();
		
    }
}
void Recording(){
 376:	cf 93       	push	r28
 378:	df 93       	push	r29
	if(RECval==1){
 37a:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <RECval>
 37e:	81 30       	cpi	r24, 0x01	; 1
 380:	e9 f5       	brne	.+122    	; 0x3fc <Recording+0x86>
 382:	1f c0       	rjmp	.+62     	; 0x3c2 <Recording+0x4c>
	while ( RECval == 1 )
	{
		//printf(RECval);
		lcd_cmd(0x01);
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Recording");
 38a:	8e e1       	ldi	r24, 0x1E	; 30
 38c:	91 e0       	ldi	r25, 0x01	; 1
 38e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		for (int i = 0; i <= 4; i++){
 392:	c0 e0       	ldi	r28, 0x00	; 0
 394:	d0 e0       	ldi	r29, 0x00	; 0
 396:	0b c0       	rjmp	.+22     	; 0x3ae <Recording+0x38>
			lcd_msg(".");
 398:	88 e2       	ldi	r24, 0x28	; 40
 39a:	91 e0       	ldi	r25, 0x01	; 1
 39c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3a0:	83 ed       	ldi	r24, 0xD3	; 211
 3a2:	90 e3       	ldi	r25, 0x30	; 48
 3a4:	01 97       	sbiw	r24, 0x01	; 1
 3a6:	f1 f7       	brne	.-4      	; 0x3a4 <Recording+0x2e>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <Recording+0x34>
 3aa:	00 00       	nop
	while ( RECval == 1 )
	{
		//printf(RECval);
		lcd_cmd(0x01);
		lcd_msg("Recording");
		for (int i = 0; i <= 4; i++){
 3ac:	21 96       	adiw	r28, 0x01	; 1
 3ae:	c5 30       	cpi	r28, 0x05	; 5
 3b0:	d1 05       	cpc	r29, r1
 3b2:	94 f3       	brlt	.-28     	; 0x398 <Recording+0x22>
			lcd_msg(".");
			_delay_ms(50);
		}
		RECval = PIND & (1<<PIND0);
 3b4:	89 b1       	in	r24, 0x09	; 9
 3b6:	81 70       	andi	r24, 0x01	; 1
 3b8:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <RECval>
		lcd_cmd(0x01);
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		
    }
}
void Recording(){
	if(RECval==1){
	while ( RECval == 1 )
 3c2:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <RECval>
 3c6:	81 30       	cpi	r24, 0x01	; 1
 3c8:	e9 f2       	breq	.-70     	; 0x384 <Recording+0xe>
			_delay_ms(50);
		}
		RECval = PIND & (1<<PIND0);
		lcd_cmd(0x01);
	}
	lcd_msg("File Saved");
 3ca:	8a e2       	ldi	r24, 0x2A	; 42
 3cc:	91 e0       	ldi	r25, 0x01	; 1
 3ce:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 3d2:	9f e3       	ldi	r25, 0x3F	; 63
 3d4:	2d e0       	ldi	r18, 0x0D	; 13
 3d6:	83 e0       	ldi	r24, 0x03	; 3
 3d8:	91 50       	subi	r25, 0x01	; 1
 3da:	20 40       	sbci	r18, 0x00	; 0
 3dc:	80 40       	sbci	r24, 0x00	; 0
 3de:	e1 f7       	brne	.-8      	; 0x3d8 <Recording+0x62>
 3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <Recording+0x6c>
 3e2:	00 00       	nop
	_delay_ms(1000);
	Menu();
 3e4:	0e 94 99 01 	call	0x332	; 0x332 <Menu>
	Row=0;
 3e8:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 3ec:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
	Screen=1;
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3f8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
}
 3fc:	df 91       	pop	r29
 3fe:	cf 91       	pop	r28
 400:	08 95       	ret

00000402 <PlayBackAudio>:
	lcd_msg("Delete Audio");
	Screen = 1;
	Row = 0;
}
void PlayBackAudio(){
	lcd_cmd(0x01);
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 408:	80 e8       	ldi	r24, 0x80	; 128
 40a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 40e:	84 e1       	ldi	r24, 0x14	; 20
 410:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 1");
 414:	85 e5       	ldi	r24, 0x55	; 85
 416:	91 e0       	ldi	r25, 0x01	; 1
 418:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0xC0);
 41c:	80 ec       	ldi	r24, 0xC0	; 192
 41e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 422:	84 e1       	ldi	r24, 0x14	; 20
 424:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 2");
 428:	83 e7       	ldi	r24, 0x73	; 115
 42a:	91 e0       	ldi	r25, 0x01	; 1
 42c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	Screen = 2;
 430:	82 e0       	ldi	r24, 0x02	; 2
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 438:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	Row = 0;
 43c:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 440:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 444:	08 95       	ret

00000446 <DeleteAudio>:
}
void DeleteAudio(){
	lcd_cmd(0x01);
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 44c:	80 e8       	ldi	r24, 0x80	; 128
 44e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 452:	84 e1       	ldi	r24, 0x14	; 20
 454:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 1");
 458:	85 e5       	ldi	r24, 0x55	; 85
 45a:	91 e0       	ldi	r25, 0x01	; 1
 45c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0xC0);
 460:	80 ec       	ldi	r24, 0xC0	; 192
 462:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x14);
 466:	84 e1       	ldi	r24, 0x14	; 20
 468:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 2");
 46c:	83 e7       	ldi	r24, 0x73	; 115
 46e:	91 e0       	ldi	r25, 0x01	; 1
 470:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	Screen = 3;
 474:	83 e0       	ldi	r24, 0x03	; 3
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 47c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	Row = 0;
 480:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 484:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 488:	08 95       	ret

0000048a <PlayClipI>:
}
void PlayClipI(){
	if ((SELval == 8) && (Row == 1) && (Screen == 2)){
 48a:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 48e:	88 30       	cpi	r24, 0x08	; 8
 490:	69 f5       	brne	.+90     	; 0x4ec <PlayClipI+0x62>
 492:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 496:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 49a:	01 97       	sbiw	r24, 0x01	; 1
 49c:	39 f5       	brne	.+78     	; 0x4ec <PlayClipI+0x62>
 49e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4a2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4a6:	02 97       	sbiw	r24, 0x02	; 2
 4a8:	09 f5       	brne	.+66     	; 0x4ec <PlayClipI+0x62>
		lcd_cmd(0x01);
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 4b0:	80 e8       	ldi	r24, 0x80	; 128
 4b2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 4b6:	84 e1       	ldi	r24, 0x14	; 20
 4b8:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("No Effect");
 4bc:	85 e3       	ldi	r24, 0x35	; 53
 4be:	91 e0       	ldi	r25, 0x01	; 1
 4c0:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 4c4:	80 ec       	ldi	r24, 0xC0	; 192
 4c6:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 4ca:	84 e1       	ldi	r24, 0x14	; 20
 4cc:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Effect 1");
 4d0:	82 e6       	ldi	r24, 0x62	; 98
 4d2:	91 e0       	ldi	r25, 0x01	; 1
 4d4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		Screen = 4;
 4d8:	84 e0       	ldi	r24, 0x04	; 4
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4e0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		Row =0;
 4e4:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 4e8:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
	}
	if ((SELval == 8) && (Row == 2) && (Screen == 2)){
 4ec:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 4f0:	88 30       	cpi	r24, 0x08	; 8
 4f2:	69 f5       	brne	.+90     	; 0x54e <PlayClipI+0xc4>
 4f4:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 4f8:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 4fc:	02 97       	sbiw	r24, 0x02	; 2
 4fe:	39 f5       	brne	.+78     	; 0x54e <PlayClipI+0xc4>
 500:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 504:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 508:	02 97       	sbiw	r24, 0x02	; 2
 50a:	09 f5       	brne	.+66     	; 0x54e <PlayClipI+0xc4>
		lcd_cmd(0x01);
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 512:	80 e8       	ldi	r24, 0x80	; 128
 514:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 518:	84 e1       	ldi	r24, 0x14	; 20
 51a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("No Effect");
 51e:	85 e3       	ldi	r24, 0x35	; 53
 520:	91 e0       	ldi	r25, 0x01	; 1
 522:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 526:	80 ec       	ldi	r24, 0xC0	; 192
 528:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 52c:	84 e1       	ldi	r24, 0x14	; 20
 52e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Effect 1");
 532:	82 e6       	ldi	r24, 0x62	; 98
 534:	91 e0       	ldi	r25, 0x01	; 1
 536:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		Screen = 5;
 53a:	85 e0       	ldi	r24, 0x05	; 5
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 542:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		Row =0;
 546:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 54a:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 54e:	08 95       	ret

00000550 <PlayClipII>:
	}
}
void PlayClipII(){
	if ((SELval == 8) && (Row == 1) && (Screen == 4)){
 550:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 554:	88 30       	cpi	r24, 0x08	; 8
 556:	c9 f4       	brne	.+50     	; 0x58a <PlayClipII+0x3a>
 558:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 55c:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 560:	01 97       	sbiw	r24, 0x01	; 1
 562:	99 f4       	brne	.+38     	; 0x58a <PlayClipII+0x3a>
 564:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 568:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 56c:	04 97       	sbiw	r24, 0x04	; 4
 56e:	69 f4       	brne	.+26     	; 0x58a <PlayClipII+0x3a>
		lcd_cmd(0x01);
 570:	81 e0       	ldi	r24, 0x01	; 1
 572:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 576:	80 e8       	ldi	r24, 0x80	; 128
 578:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 57c:	84 e1       	ldi	r24, 0x14	; 20
 57e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Playing Audio");
 582:	8f e3       	ldi	r24, 0x3F	; 63
 584:	91 e0       	ldi	r25, 0x01	; 1
 586:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	}
	if ((SELval == 8) && (Row == 2) && (Screen == 4)){
 58a:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 58e:	88 30       	cpi	r24, 0x08	; 8
 590:	19 f5       	brne	.+70     	; 0x5d8 <PlayClipII+0x88>
 592:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 596:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 59a:	02 97       	sbiw	r24, 0x02	; 2
 59c:	e9 f4       	brne	.+58     	; 0x5d8 <PlayClipII+0x88>
 59e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5a2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5a6:	04 97       	sbiw	r24, 0x04	; 4
 5a8:	b9 f4       	brne	.+46     	; 0x5d8 <PlayClipII+0x88>
		lcd_cmd(0x01);
 5aa:	81 e0       	ldi	r24, 0x01	; 1
 5ac:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 5b0:	80 e8       	ldi	r24, 0x80	; 128
 5b2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 5b6:	84 e1       	ldi	r24, 0x14	; 20
 5b8:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Playing Audio 1");
 5bc:	8d e4       	ldi	r24, 0x4D	; 77
 5be:	91 e0       	ldi	r25, 0x01	; 1
 5c0:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 5c4:	80 ec       	ldi	r24, 0xC0	; 192
 5c6:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 5ca:	84 e1       	ldi	r24, 0x14	; 20
 5cc:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("with Effect 1");
 5d0:	8d e5       	ldi	r24, 0x5D	; 93
 5d2:	91 e0       	ldi	r25, 0x01	; 1
 5d4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	}
	if ((SELval == 8) && (Row == 1) && (Screen == 5)){
 5d8:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 5dc:	88 30       	cpi	r24, 0x08	; 8
 5de:	c9 f4       	brne	.+50     	; 0x612 <PlayClipII+0xc2>
 5e0:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 5e4:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 5e8:	01 97       	sbiw	r24, 0x01	; 1
 5ea:	99 f4       	brne	.+38     	; 0x612 <PlayClipII+0xc2>
 5ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5f0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5f4:	05 97       	sbiw	r24, 0x05	; 5
 5f6:	69 f4       	brne	.+26     	; 0x612 <PlayClipII+0xc2>
		lcd_cmd(0x01);
 5f8:	81 e0       	ldi	r24, 0x01	; 1
 5fa:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 5fe:	80 e8       	ldi	r24, 0x80	; 128
 600:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 604:	84 e1       	ldi	r24, 0x14	; 20
 606:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Playing Audio 2");
 60a:	8b e6       	ldi	r24, 0x6B	; 107
 60c:	91 e0       	ldi	r25, 0x01	; 1
 60e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	}
	if ((SELval == 8) && (Row == 2) && (Screen == 5)){
 612:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 616:	88 30       	cpi	r24, 0x08	; 8
 618:	19 f5       	brne	.+70     	; 0x660 <PlayClipII+0x110>
 61a:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 61e:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 622:	02 97       	sbiw	r24, 0x02	; 2
 624:	e9 f4       	brne	.+58     	; 0x660 <PlayClipII+0x110>
 626:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 62a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 62e:	05 97       	sbiw	r24, 0x05	; 5
 630:	b9 f4       	brne	.+46     	; 0x660 <PlayClipII+0x110>
		lcd_cmd(0x01);
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 638:	80 e8       	ldi	r24, 0x80	; 128
 63a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 63e:	84 e1       	ldi	r24, 0x14	; 20
 640:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Playing Audio 2");
 644:	8b e6       	ldi	r24, 0x6B	; 107
 646:	91 e0       	ldi	r25, 0x01	; 1
 648:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 64c:	80 ec       	ldi	r24, 0xC0	; 192
 64e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 652:	84 e1       	ldi	r24, 0x14	; 20
 654:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("with Effect 1");
 658:	8d e5       	ldi	r24, 0x5D	; 93
 65a:	91 e0       	ldi	r25, 0x01	; 1
 65c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 660:	08 95       	ret

00000662 <DeleteClipI>:
	}
}
void DeleteClipI(){
	if ((SELval == 8) && (Row != 0) && (Screen == 3)){
 662:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 666:	88 30       	cpi	r24, 0x08	; 8
 668:	69 f5       	brne	.+90     	; 0x6c4 <DeleteClipI+0x62>
 66a:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 66e:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 672:	89 2b       	or	r24, r25
 674:	39 f1       	breq	.+78     	; 0x6c4 <DeleteClipI+0x62>
 676:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 67a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 67e:	03 97       	sbiw	r24, 0x03	; 3
 680:	09 f5       	brne	.+66     	; 0x6c4 <DeleteClipI+0x62>
		lcd_cmd(0x01);
 682:	81 e0       	ldi	r24, 0x01	; 1
 684:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 688:	80 e8       	ldi	r24, 0x80	; 128
 68a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 68e:	84 e1       	ldi	r24, 0x14	; 20
 690:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Press Select");
 694:	8b e7       	ldi	r24, 0x7B	; 123
 696:	91 e0       	ldi	r25, 0x01	; 1
 698:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 69c:	80 ec       	ldi	r24, 0xC0	; 192
 69e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 6a2:	84 e1       	ldi	r24, 0x14	; 20
 6a4:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("to delete");
 6a8:	88 e8       	ldi	r24, 0x88	; 136
 6aa:	91 e0       	ldi	r25, 0x01	; 1
 6ac:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		Screen = 6;
 6b0:	86 e0       	ldi	r24, 0x06	; 6
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6b8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		Row = 0;
 6bc:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 6c0:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 6c4:	08 95       	ret

000006c6 <DeleteClipII>:
	}
}

void DeleteClipII(){
	if ((SELval == 8 ) && (Screen == 6)){
 6c6:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 6ca:	88 30       	cpi	r24, 0x08	; 8
 6cc:	f1 f4       	brne	.+60     	; 0x70a <DeleteClipII+0x44>
 6ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6d2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6d6:	06 97       	sbiw	r24, 0x06	; 6
 6d8:	c1 f4       	brne	.+48     	; 0x70a <DeleteClipII+0x44>
		lcd_cmd(0x01);
 6da:	81 e0       	ldi	r24, 0x01	; 1
 6dc:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 6e0:	80 e8       	ldi	r24, 0x80	; 128
 6e2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x14);
 6e6:	84 e1       	ldi	r24, 0x14	; 20
 6e8:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Deleted");
 6ec:	82 e9       	ldi	r24, 0x92	; 146
 6ee:	91 e0       	ldi	r25, 0x01	; 1
 6f0:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 6f4:	2f e3       	ldi	r18, 0x3F	; 63
 6f6:	8d e0       	ldi	r24, 0x0D	; 13
 6f8:	93 e0       	ldi	r25, 0x03	; 3
 6fa:	21 50       	subi	r18, 0x01	; 1
 6fc:	80 40       	sbci	r24, 0x00	; 0
 6fe:	90 40       	sbci	r25, 0x00	; 0
 700:	e1 f7       	brne	.-8      	; 0x6fa <DeleteClipII+0x34>
 702:	00 c0       	rjmp	.+0      	; 0x704 <DeleteClipII+0x3e>
 704:	00 00       	nop
		_delay_ms(1000);
		Menu();
 706:	0e 94 99 01 	call	0x332	; 0x332 <Menu>
 70a:	08 95       	ret

0000070c <Back>:
	}
}
void Back(){
	if ((BACKval == 16) && ((Screen == 2) || (Screen == 3))){
 70c:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <BACKval>
 710:	80 31       	cpi	r24, 0x10	; 16
 712:	49 f4       	brne	.+18     	; 0x726 <Back+0x1a>
 714:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 718:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 71c:	02 97       	sbiw	r24, 0x02	; 2
 71e:	02 97       	sbiw	r24, 0x02	; 2
 720:	10 f4       	brcc	.+4      	; 0x726 <Back+0x1a>
		Menu();
 722:	0e 94 99 01 	call	0x332	; 0x332 <Menu>
	}
	if ((BACKval == 16) && ((Screen == 4) || (Screen == 5))){
 726:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <BACKval>
 72a:	80 31       	cpi	r24, 0x10	; 16
 72c:	49 f4       	brne	.+18     	; 0x740 <Back+0x34>
 72e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 732:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 736:	04 97       	sbiw	r24, 0x04	; 4
 738:	02 97       	sbiw	r24, 0x02	; 2
 73a:	10 f4       	brcc	.+4      	; 0x740 <Back+0x34>
		PlayBackAudio();
 73c:	0e 94 01 02 	call	0x402	; 0x402 <PlayBackAudio>
 740:	08 95       	ret

00000742 <main>:
void DeleteClipII();
void Back();

int main(void)
{
	DDRD &=~((1<<PIND0)|(1<<PIND1)|(1<<PIND2)|(1<<PIND3)|(1<<PIND4)) ;
 742:	8a b1       	in	r24, 0x0a	; 10
 744:	80 7e       	andi	r24, 0xE0	; 224
 746:	8a b9       	out	0x0a, r24	; 10
	i2c_init();
 748:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
	i2c_start();
 74c:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_start>
	i2c_write(0x70);
 750:	80 e7       	ldi	r24, 0x70	; 112
 752:	0e 94 64 00 	call	0xc8	; 0xc8 <i2c_write>
	lcd_init();
 756:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
	lcd_msg("Voice Recorder");
 75a:	8a e9       	ldi	r24, 0x9A	; 154
 75c:	91 e0       	ldi	r25, 0x01	; 1
 75e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 762:	83 ed       	ldi	r24, 0xD3	; 211
 764:	90 e3       	ldi	r25, 0x30	; 48
 766:	01 97       	sbiw	r24, 0x01	; 1
 768:	f1 f7       	brne	.-4      	; 0x766 <main+0x24>
 76a:	00 c0       	rjmp	.+0      	; 0x76c <main+0x2a>
 76c:	00 00       	nop
	_delay_ms(50);
	Menu();
 76e:	0e 94 99 01 	call	0x332	; 0x332 <Menu>
    /* Replace with your application code */
    while (1) 
    {
		RECval = PIND & (1<<PIND0); /*1*/
 772:	89 b1       	in	r24, 0x09	; 9
 774:	81 70       	andi	r24, 0x01	; 1
 776:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <RECval>
		UPval = PIND & (1<<PIND1);/*2*/
 77a:	89 b1       	in	r24, 0x09	; 9
 77c:	82 70       	andi	r24, 0x02	; 2
 77e:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <UPval>
		DOWNval = PIND & (1<<PIND2);//4
 782:	89 b1       	in	r24, 0x09	; 9
 784:	84 70       	andi	r24, 0x04	; 4
 786:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <DOWNval>
		SELval = PIND & (1<<PIND3);//8
 78a:	89 b1       	in	r24, 0x09	; 9
 78c:	88 70       	andi	r24, 0x08	; 8
 78e:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <SELval>
		BACKval = PIND & (1<<PIND4); //16
 792:	89 b1       	in	r24, 0x09	; 9
 794:	80 71       	andi	r24, 0x10	; 16
 796:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <BACKval>
		
		Recording();
 79a:	0e 94 bb 01 	call	0x376	; 0x376 <Recording>
		Navigate();
 79e:	0e 94 7e 01 	call	0x2fc	; 0x2fc <Navigate>
		if ((SELval == 8) && (Screen == 1) && (Row == 1)){
 7a2:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 7a6:	88 30       	cpi	r24, 0x08	; 8
 7a8:	71 f4       	brne	.+28     	; 0x7c6 <main+0x84>
 7aa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 7ae:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7b2:	01 97       	sbiw	r24, 0x01	; 1
 7b4:	41 f4       	brne	.+16     	; 0x7c6 <main+0x84>
 7b6:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 7ba:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 7be:	01 97       	sbiw	r24, 0x01	; 1
 7c0:	11 f4       	brne	.+4      	; 0x7c6 <main+0x84>
			PlayBackAudio();
 7c2:	0e 94 01 02 	call	0x402	; 0x402 <PlayBackAudio>
		}
		if ((SELval == 8) && (Screen == 1) && (Row == 2)){
 7c6:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 7ca:	88 30       	cpi	r24, 0x08	; 8
 7cc:	71 f4       	brne	.+28     	; 0x7ea <main+0xa8>
 7ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 7d2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7d6:	01 97       	sbiw	r24, 0x01	; 1
 7d8:	41 f4       	brne	.+16     	; 0x7ea <main+0xa8>
 7da:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 7de:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 7e2:	02 97       	sbiw	r24, 0x02	; 2
 7e4:	11 f4       	brne	.+4      	; 0x7ea <main+0xa8>
			DeleteAudio();
 7e6:	0e 94 23 02 	call	0x446	; 0x446 <DeleteAudio>
		}
		PlayClipI();
 7ea:	0e 94 45 02 	call	0x48a	; 0x48a <PlayClipI>
		PlayClipII();
 7ee:	0e 94 a8 02 	call	0x550	; 0x550 <PlayClipII>
		DeleteClipI();
 7f2:	0e 94 31 03 	call	0x662	; 0x662 <DeleteClipI>
		DeleteClipII();
 7f6:	0e 94 63 03 	call	0x6c6	; 0x6c6 <DeleteClipII>
		Back();
 7fa:	0e 94 86 03 	call	0x70c	; 0x70c <Back>
		
    }
 7fe:	b9 cf       	rjmp	.-142    	; 0x772 <main+0x30>

00000800 <_exit>:
 800:	f8 94       	cli

00000802 <__stop_program>:
 802:	ff cf       	rjmp	.-2      	; 0x802 <__stop_program>
