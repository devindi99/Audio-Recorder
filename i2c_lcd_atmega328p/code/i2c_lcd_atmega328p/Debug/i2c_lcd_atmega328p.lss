
i2c_lcd_atmega328p.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000aa  00800100  00000792  00000826  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000792  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  008001aa  008001aa  000008d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000900  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000940  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011f6  00000000  00000000  00000a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000786  00000000  00000000  00001c0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a5e  00000000  00000000  00002394  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00002df4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a0  00000000  00000000  00002fb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002fc  00000000  00000000  00003450  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  0000374c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e9       	ldi	r30, 0x92	; 146
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 3a       	cpi	r26, 0xAA	; 170
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa ea       	ldi	r26, 0xAA	; 170
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 3b       	cpi	r26, 0xB1	; 177
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 68 03 	call	0x6d0	; 0x6d0 <main>
  9e:	0c 94 c7 03 	jmp	0x78e	; 0x78e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //----Command for Left Shift
	delay(200);
  a6:	82 e6       	ldi	r24, 0x62	; 98
  a8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  ac:	84 e0       	ldi	r24, 0x04	; 4
  ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  b6:	08 95       	ret

000000b8 <i2c_start>:
  b8:	84 ea       	ldi	r24, 0xA4	; 164
  ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  c2:	88 23       	and	r24, r24
  c4:	e4 f7       	brge	.-8      	; 0xbe <i2c_start+0x6>
  c6:	08 95       	ret

000000c8 <i2c_write>:
  c8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  cc:	84 e8       	ldi	r24, 0x84	; 132
  ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d6:	88 23       	and	r24, r24
  d8:	e4 f7       	brge	.-8      	; 0xd2 <i2c_write+0xa>
  da:	08 95       	ret

000000dc <delay>:
  dc:	40 e0       	ldi	r20, 0x00	; 0
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	0a c0       	rjmp	.+20     	; 0xf6 <delay+0x1a>
  e2:	2f 5f       	subi	r18, 0xFF	; 255
  e4:	3f 4f       	sbci	r19, 0xFF	; 255
  e6:	02 c0       	rjmp	.+4      	; 0xec <delay+0x10>
  e8:	20 e0       	ldi	r18, 0x00	; 0
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	29 37       	cpi	r18, 0x79	; 121
  ee:	31 05       	cpc	r19, r1
  f0:	c4 f3       	brlt	.-16     	; 0xe2 <delay+0x6>
  f2:	4f 5f       	subi	r20, 0xFF	; 255
  f4:	5f 4f       	sbci	r21, 0xFF	; 255
  f6:	84 17       	cp	r24, r20
  f8:	95 07       	cpc	r25, r21
  fa:	b4 f7       	brge	.-20     	; 0xe8 <delay+0xc>
  fc:	08 95       	ret

000000fe <toggle>:
  fe:	eb eb       	ldi	r30, 0xBB	; 187
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	82 60       	ori	r24, 0x02	; 2
 106:	80 83       	st	Z, r24
 108:	84 e8       	ldi	r24, 0x84	; 132
 10a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 10e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 112:	88 23       	and	r24, r24
 114:	e4 f7       	brge	.-8      	; 0x10e <toggle+0x10>
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 6e 00 	call	0xdc	; 0xdc <delay>
 11e:	eb eb       	ldi	r30, 0xBB	; 187
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	8d 7f       	andi	r24, 0xFD	; 253
 126:	80 83       	st	Z, r24
 128:	84 e8       	ldi	r24, 0x84	; 132
 12a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 12e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 132:	88 23       	and	r24, r24
 134:	e4 f7       	brge	.-8      	; 0x12e <toggle+0x30>
 136:	08 95       	ret

00000138 <lcd_cmd_hf>:
 138:	eb eb       	ldi	r30, 0xBB	; 187
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	90 81       	ld	r25, Z
 13e:	9e 7f       	andi	r25, 0xFE	; 254
 140:	90 83       	st	Z, r25
 142:	94 e8       	ldi	r25, 0x84	; 132
 144:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 148:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 14c:	99 23       	and	r25, r25
 14e:	e4 f7       	brge	.-8      	; 0x148 <lcd_cmd_hf+0x10>
 150:	eb eb       	ldi	r30, 0xBB	; 187
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	90 81       	ld	r25, Z
 156:	9f 70       	andi	r25, 0x0F	; 15
 158:	90 83       	st	Z, r25
 15a:	94 e8       	ldi	r25, 0x84	; 132
 15c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 160:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 164:	99 23       	and	r25, r25
 166:	e4 f7       	brge	.-8      	; 0x160 <lcd_cmd_hf+0x28>
 168:	eb eb       	ldi	r30, 0xBB	; 187
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	90 81       	ld	r25, Z
 16e:	80 7f       	andi	r24, 0xF0	; 240
 170:	89 2b       	or	r24, r25
 172:	80 83       	st	Z, r24
 174:	84 e8       	ldi	r24, 0x84	; 132
 176:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17e:	88 23       	and	r24, r24
 180:	e4 f7       	brge	.-8      	; 0x17a <lcd_cmd_hf+0x42>
 182:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 186:	08 95       	ret

00000188 <lcd_cmd>:
 188:	cf 93       	push	r28
 18a:	c8 2f       	mov	r28, r24
 18c:	eb eb       	ldi	r30, 0xBB	; 187
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	8e 7f       	andi	r24, 0xFE	; 254
 194:	80 83       	st	Z, r24
 196:	84 e8       	ldi	r24, 0x84	; 132
 198:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 19c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a0:	88 23       	and	r24, r24
 1a2:	e4 f7       	brge	.-8      	; 0x19c <lcd_cmd+0x14>
 1a4:	eb eb       	ldi	r30, 0xBB	; 187
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	8f 70       	andi	r24, 0x0F	; 15
 1ac:	80 83       	st	Z, r24
 1ae:	84 e8       	ldi	r24, 0x84	; 132
 1b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b8:	88 23       	and	r24, r24
 1ba:	e4 f7       	brge	.-8      	; 0x1b4 <lcd_cmd+0x2c>
 1bc:	eb eb       	ldi	r30, 0xBB	; 187
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	9c 2f       	mov	r25, r28
 1c4:	90 7f       	andi	r25, 0xF0	; 240
 1c6:	89 2b       	or	r24, r25
 1c8:	80 83       	st	Z, r24
 1ca:	84 e8       	ldi	r24, 0x84	; 132
 1cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d4:	88 23       	and	r24, r24
 1d6:	e4 f7       	brge	.-8      	; 0x1d0 <lcd_cmd+0x48>
 1d8:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 1dc:	eb eb       	ldi	r30, 0xBB	; 187
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	8f 70       	andi	r24, 0x0F	; 15
 1e4:	80 83       	st	Z, r24
 1e6:	84 e8       	ldi	r24, 0x84	; 132
 1e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1f0:	88 23       	and	r24, r24
 1f2:	e4 f7       	brge	.-8      	; 0x1ec <lcd_cmd+0x64>
 1f4:	eb eb       	ldi	r30, 0xBB	; 187
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	20 81       	ld	r18, Z
 1fa:	30 e1       	ldi	r19, 0x10	; 16
 1fc:	c3 9f       	mul	r28, r19
 1fe:	c0 01       	movw	r24, r0
 200:	11 24       	eor	r1, r1
 202:	82 2b       	or	r24, r18
 204:	80 83       	st	Z, r24
 206:	84 e8       	ldi	r24, 0x84	; 132
 208:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 20c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 210:	88 23       	and	r24, r24
 212:	e4 f7       	brge	.-8      	; 0x20c <lcd_cmd+0x84>
 214:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 218:	cf 91       	pop	r28
 21a:	08 95       	ret

0000021c <lcd_init>:
 21c:	80 e3       	ldi	r24, 0x30	; 48
 21e:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 222:	80 e3       	ldi	r24, 0x30	; 48
 224:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 228:	80 e2       	ldi	r24, 0x20	; 32
 22a:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 22e:	88 e2       	ldi	r24, 0x28	; 40
 230:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 23a:	86 e0       	ldi	r24, 0x06	; 6
 23c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 240:	80 e8       	ldi	r24, 0x80	; 128
 242:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 246:	8f e0       	ldi	r24, 0x0F	; 15
 248:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 24c:	08 95       	ret

0000024e <lcd_dwr>:
 24e:	cf 93       	push	r28
 250:	c8 2f       	mov	r28, r24
 252:	eb eb       	ldi	r30, 0xBB	; 187
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	81 60       	ori	r24, 0x01	; 1
 25a:	80 83       	st	Z, r24
 25c:	84 e8       	ldi	r24, 0x84	; 132
 25e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 262:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 266:	88 23       	and	r24, r24
 268:	e4 f7       	brge	.-8      	; 0x262 <lcd_dwr+0x14>
 26a:	eb eb       	ldi	r30, 0xBB	; 187
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	8f 70       	andi	r24, 0x0F	; 15
 272:	80 83       	st	Z, r24
 274:	84 e8       	ldi	r24, 0x84	; 132
 276:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27e:	88 23       	and	r24, r24
 280:	e4 f7       	brge	.-8      	; 0x27a <lcd_dwr+0x2c>
 282:	eb eb       	ldi	r30, 0xBB	; 187
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	9c 2f       	mov	r25, r28
 28a:	90 7f       	andi	r25, 0xF0	; 240
 28c:	89 2b       	or	r24, r25
 28e:	80 83       	st	Z, r24
 290:	84 e8       	ldi	r24, 0x84	; 132
 292:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 296:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 29a:	88 23       	and	r24, r24
 29c:	e4 f7       	brge	.-8      	; 0x296 <lcd_dwr+0x48>
 29e:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2a2:	eb eb       	ldi	r30, 0xBB	; 187
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	80 81       	ld	r24, Z
 2a8:	8f 70       	andi	r24, 0x0F	; 15
 2aa:	80 83       	st	Z, r24
 2ac:	84 e8       	ldi	r24, 0x84	; 132
 2ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b6:	88 23       	and	r24, r24
 2b8:	e4 f7       	brge	.-8      	; 0x2b2 <lcd_dwr+0x64>
 2ba:	eb eb       	ldi	r30, 0xBB	; 187
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	20 81       	ld	r18, Z
 2c0:	30 e1       	ldi	r19, 0x10	; 16
 2c2:	c3 9f       	mul	r28, r19
 2c4:	c0 01       	movw	r24, r0
 2c6:	11 24       	eor	r1, r1
 2c8:	82 2b       	or	r24, r18
 2ca:	80 83       	st	Z, r24
 2cc:	84 e8       	ldi	r24, 0x84	; 132
 2ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d6:	88 23       	and	r24, r24
 2d8:	e4 f7       	brge	.-8      	; 0x2d2 <lcd_dwr+0x84>
 2da:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2de:	cf 91       	pop	r28
 2e0:	08 95       	ret

000002e2 <lcd_msg>:
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	ec 01       	movw	r28, r24
 2e8:	03 c0       	rjmp	.+6      	; 0x2f0 <lcd_msg+0xe>
 2ea:	21 96       	adiw	r28, 0x01	; 1
 2ec:	0e 94 27 01 	call	0x24e	; 0x24e <lcd_dwr>
 2f0:	88 81       	ld	r24, Y
 2f2:	81 11       	cpse	r24, r1
 2f4:	fa cf       	rjmp	.-12     	; 0x2ea <lcd_msg+0x8>
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	08 95       	ret

000002fc <Navigate>:
	Screen=1;
	}
}

void Navigate(){
	if (UPval==2)
 2fc:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <UPval>
 300:	82 30       	cpi	r24, 0x02	; 2
 302:	49 f4       	brne	.+18     	; 0x316 <Navigate+0x1a>
	{
		lcd_cmd(0x80);
 304:	80 e8       	ldi	r24, 0x80	; 128
 306:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		//lcd_cmd(0x0F);
		Row=1;
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <__data_end+0x1>
 312:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <__data_end>
		}
		
	if (DOWNval==4)
 316:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <DOWNval>
 31a:	84 30       	cpi	r24, 0x04	; 4
 31c:	49 f4       	brne	.+18     	; 0x330 <Navigate+0x34>
	{
	
		lcd_cmd(0xC0);
 31e:	80 ec       	ldi	r24, 0xC0	; 192
 320:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		//lcd_cmd(0x0F); /*blink*/
		Row=2;
 324:	82 e0       	ldi	r24, 0x02	; 2
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <__data_end+0x1>
 32c:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <__data_end>
 330:	08 95       	ret

00000332 <Menu>:
		
	}
}
void Menu(){
	lcd_cmd(0x01);
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 338:	80 e8       	ldi	r24, 0x80	; 128
 33a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Playback audio");
 33e:	82 e0       	ldi	r24, 0x02	; 2
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0xC0);
 346:	80 ec       	ldi	r24, 0xC0	; 192
 348:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Delete Audio");
 34c:	81 e1       	ldi	r24, 0x11	; 17
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	Screen = 1;
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 35c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	Row = 0;
 360:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 364:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 368:	08 95       	ret

0000036a <Recording>:
		DeleteClipII();
		Back();
		
    }
}
void Recording(){
 36a:	cf 93       	push	r28
 36c:	df 93       	push	r29
	if(RECval==1){
 36e:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <RECval>
 372:	81 30       	cpi	r24, 0x01	; 1
 374:	e9 f5       	brne	.+122    	; 0x3f0 <Recording+0x86>
 376:	1f c0       	rjmp	.+62     	; 0x3b6 <Recording+0x4c>
	while ( RECval == 1 )
	{
		//printf(RECval);
		lcd_cmd(0x01);
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Recording");
 37e:	8e e1       	ldi	r24, 0x1E	; 30
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		for (int i = 0; i <= 4; i++){
 386:	c0 e0       	ldi	r28, 0x00	; 0
 388:	d0 e0       	ldi	r29, 0x00	; 0
 38a:	0b c0       	rjmp	.+22     	; 0x3a2 <Recording+0x38>
			lcd_msg(".");
 38c:	88 e2       	ldi	r24, 0x28	; 40
 38e:	91 e0       	ldi	r25, 0x01	; 1
 390:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 394:	83 ed       	ldi	r24, 0xD3	; 211
 396:	90 e3       	ldi	r25, 0x30	; 48
 398:	01 97       	sbiw	r24, 0x01	; 1
 39a:	f1 f7       	brne	.-4      	; 0x398 <Recording+0x2e>
 39c:	00 c0       	rjmp	.+0      	; 0x39e <Recording+0x34>
 39e:	00 00       	nop
	while ( RECval == 1 )
	{
		//printf(RECval);
		lcd_cmd(0x01);
		lcd_msg("Recording");
		for (int i = 0; i <= 4; i++){
 3a0:	21 96       	adiw	r28, 0x01	; 1
 3a2:	c5 30       	cpi	r28, 0x05	; 5
 3a4:	d1 05       	cpc	r29, r1
 3a6:	94 f3       	brlt	.-28     	; 0x38c <Recording+0x22>
			lcd_msg(".");
			_delay_ms(50);
		}
		RECval = PIND & (1<<PIND0);
 3a8:	89 b1       	in	r24, 0x09	; 9
 3aa:	81 70       	andi	r24, 0x01	; 1
 3ac:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <RECval>
		lcd_cmd(0x01);
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		
    }
}
void Recording(){
	if(RECval==1){
	while ( RECval == 1 )
 3b6:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <RECval>
 3ba:	81 30       	cpi	r24, 0x01	; 1
 3bc:	e9 f2       	breq	.-70     	; 0x378 <Recording+0xe>
			_delay_ms(50);
		}
		RECval = PIND & (1<<PIND0);
		lcd_cmd(0x01);
	}
	lcd_msg("File Saved");
 3be:	8a e2       	ldi	r24, 0x2A	; 42
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 3c6:	9f e3       	ldi	r25, 0x3F	; 63
 3c8:	2d e0       	ldi	r18, 0x0D	; 13
 3ca:	83 e0       	ldi	r24, 0x03	; 3
 3cc:	91 50       	subi	r25, 0x01	; 1
 3ce:	20 40       	sbci	r18, 0x00	; 0
 3d0:	80 40       	sbci	r24, 0x00	; 0
 3d2:	e1 f7       	brne	.-8      	; 0x3cc <Recording+0x62>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <Recording+0x6c>
 3d6:	00 00       	nop
	_delay_ms(1000);
	Menu();
 3d8:	0e 94 99 01 	call	0x332	; 0x332 <Menu>
	Row=0;
 3dc:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 3e0:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
	Screen=1;
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3ec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
}
 3f0:	df 91       	pop	r29
 3f2:	cf 91       	pop	r28
 3f4:	08 95       	ret

000003f6 <PlayBackAudio>:
	lcd_msg("Delete Audio");
	Screen = 1;
	Row = 0;
}
void PlayBackAudio(){
	lcd_cmd(0x01);
 3f6:	81 e0       	ldi	r24, 0x01	; 1
 3f8:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 3fc:	80 e8       	ldi	r24, 0x80	; 128
 3fe:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 1");
 402:	85 e5       	ldi	r24, 0x55	; 85
 404:	91 e0       	ldi	r25, 0x01	; 1
 406:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0xC0);
 40a:	80 ec       	ldi	r24, 0xC0	; 192
 40c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 2");
 410:	83 e7       	ldi	r24, 0x73	; 115
 412:	91 e0       	ldi	r25, 0x01	; 1
 414:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	Screen = 2;
 418:	82 e0       	ldi	r24, 0x02	; 2
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 420:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	Row = 0;
 424:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 428:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 42c:	08 95       	ret

0000042e <DeleteAudio>:
}
void DeleteAudio(){
	lcd_cmd(0x01);
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_cmd(0x80);
 434:	80 e8       	ldi	r24, 0x80	; 128
 436:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 1");
 43a:	85 e5       	ldi	r24, 0x55	; 85
 43c:	91 e0       	ldi	r25, 0x01	; 1
 43e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	lcd_cmd(0xC0);
 442:	80 ec       	ldi	r24, 0xC0	; 192
 444:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
	lcd_msg("Audio 2");
 448:	83 e7       	ldi	r24, 0x73	; 115
 44a:	91 e0       	ldi	r25, 0x01	; 1
 44c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	Screen = 3;
 450:	83 e0       	ldi	r24, 0x03	; 3
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 458:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	Row = 0;
 45c:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 460:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 464:	08 95       	ret

00000466 <PlayClipI>:
}
void PlayClipI(){
	if ((SELval == 8) && (Row == 1) && (Screen == 2)){
 466:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 46a:	88 30       	cpi	r24, 0x08	; 8
 46c:	39 f5       	brne	.+78     	; 0x4bc <PlayClipI+0x56>
 46e:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 472:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 476:	01 97       	sbiw	r24, 0x01	; 1
 478:	09 f5       	brne	.+66     	; 0x4bc <PlayClipI+0x56>
 47a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 47e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 482:	02 97       	sbiw	r24, 0x02	; 2
 484:	d9 f4       	brne	.+54     	; 0x4bc <PlayClipI+0x56>
		lcd_cmd(0x01);
 486:	81 e0       	ldi	r24, 0x01	; 1
 488:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 48c:	80 e8       	ldi	r24, 0x80	; 128
 48e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("No Effect");
 492:	85 e3       	ldi	r24, 0x35	; 53
 494:	91 e0       	ldi	r25, 0x01	; 1
 496:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 49a:	80 ec       	ldi	r24, 0xC0	; 192
 49c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Effect 1");
 4a0:	82 e6       	ldi	r24, 0x62	; 98
 4a2:	91 e0       	ldi	r25, 0x01	; 1
 4a4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		Screen = 4;
 4a8:	84 e0       	ldi	r24, 0x04	; 4
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4b0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		Row =0;
 4b4:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 4b8:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
	}
	if ((SELval == 8) && (Row == 2) && (Screen == 2)){
 4bc:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 4c0:	88 30       	cpi	r24, 0x08	; 8
 4c2:	39 f5       	brne	.+78     	; 0x512 <PlayClipI+0xac>
 4c4:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 4c8:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 4cc:	02 97       	sbiw	r24, 0x02	; 2
 4ce:	09 f5       	brne	.+66     	; 0x512 <PlayClipI+0xac>
 4d0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4d4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4d8:	02 97       	sbiw	r24, 0x02	; 2
 4da:	d9 f4       	brne	.+54     	; 0x512 <PlayClipI+0xac>
		lcd_cmd(0x01);
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 4e2:	80 e8       	ldi	r24, 0x80	; 128
 4e4:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("No Effect");
 4e8:	85 e3       	ldi	r24, 0x35	; 53
 4ea:	91 e0       	ldi	r25, 0x01	; 1
 4ec:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 4f0:	80 ec       	ldi	r24, 0xC0	; 192
 4f2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Effect 1");
 4f6:	82 e6       	ldi	r24, 0x62	; 98
 4f8:	91 e0       	ldi	r25, 0x01	; 1
 4fa:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		Screen = 5;
 4fe:	85 e0       	ldi	r24, 0x05	; 5
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 506:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		Row =0;
 50a:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 50e:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 512:	08 95       	ret

00000514 <PlayClipII>:
	}
}
void PlayClipII(){
	if ((SELval == 8) && (Row == 1) && (Screen == 4)){
 514:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 518:	88 30       	cpi	r24, 0x08	; 8
 51a:	b1 f4       	brne	.+44     	; 0x548 <PlayClipII+0x34>
 51c:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 520:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 524:	01 97       	sbiw	r24, 0x01	; 1
 526:	81 f4       	brne	.+32     	; 0x548 <PlayClipII+0x34>
 528:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 52c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 530:	04 97       	sbiw	r24, 0x04	; 4
 532:	51 f4       	brne	.+20     	; 0x548 <PlayClipII+0x34>
		lcd_cmd(0x01);
 534:	81 e0       	ldi	r24, 0x01	; 1
 536:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 53a:	80 e8       	ldi	r24, 0x80	; 128
 53c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Playing Audio");
 540:	8f e3       	ldi	r24, 0x3F	; 63
 542:	91 e0       	ldi	r25, 0x01	; 1
 544:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	}
	if ((SELval == 8) && (Row == 2) && (Screen == 4)){
 548:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 54c:	88 30       	cpi	r24, 0x08	; 8
 54e:	e9 f4       	brne	.+58     	; 0x58a <PlayClipII+0x76>
 550:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 554:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 558:	02 97       	sbiw	r24, 0x02	; 2
 55a:	b9 f4       	brne	.+46     	; 0x58a <PlayClipII+0x76>
 55c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 560:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 564:	04 97       	sbiw	r24, 0x04	; 4
 566:	89 f4       	brne	.+34     	; 0x58a <PlayClipII+0x76>
		lcd_cmd(0x01);
 568:	81 e0       	ldi	r24, 0x01	; 1
 56a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 56e:	80 e8       	ldi	r24, 0x80	; 128
 570:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Playing Audio 1");
 574:	8d e4       	ldi	r24, 0x4D	; 77
 576:	91 e0       	ldi	r25, 0x01	; 1
 578:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 57c:	80 ec       	ldi	r24, 0xC0	; 192
 57e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("with Effect 1");
 582:	8d e5       	ldi	r24, 0x5D	; 93
 584:	91 e0       	ldi	r25, 0x01	; 1
 586:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	}
	if ((SELval == 8) && (Row == 1) && (Screen == 5)){
 58a:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 58e:	88 30       	cpi	r24, 0x08	; 8
 590:	b1 f4       	brne	.+44     	; 0x5be <PlayClipII+0xaa>
 592:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 596:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 59a:	01 97       	sbiw	r24, 0x01	; 1
 59c:	81 f4       	brne	.+32     	; 0x5be <PlayClipII+0xaa>
 59e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5a2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5a6:	05 97       	sbiw	r24, 0x05	; 5
 5a8:	51 f4       	brne	.+20     	; 0x5be <PlayClipII+0xaa>
		lcd_cmd(0x01);
 5aa:	81 e0       	ldi	r24, 0x01	; 1
 5ac:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 5b0:	80 e8       	ldi	r24, 0x80	; 128
 5b2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Playing Audio 2");
 5b6:	8b e6       	ldi	r24, 0x6B	; 107
 5b8:	91 e0       	ldi	r25, 0x01	; 1
 5ba:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	}
	if ((SELval == 8) && (Row == 2) && (Screen == 5)){
 5be:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 5c2:	88 30       	cpi	r24, 0x08	; 8
 5c4:	e9 f4       	brne	.+58     	; 0x600 <PlayClipII+0xec>
 5c6:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 5ca:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 5ce:	02 97       	sbiw	r24, 0x02	; 2
 5d0:	b9 f4       	brne	.+46     	; 0x600 <PlayClipII+0xec>
 5d2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5d6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5da:	05 97       	sbiw	r24, 0x05	; 5
 5dc:	89 f4       	brne	.+34     	; 0x600 <PlayClipII+0xec>
		lcd_cmd(0x01);
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 5e4:	80 e8       	ldi	r24, 0x80	; 128
 5e6:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Playing Audio 2");
 5ea:	8b e6       	ldi	r24, 0x6B	; 107
 5ec:	91 e0       	ldi	r25, 0x01	; 1
 5ee:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 5f2:	80 ec       	ldi	r24, 0xC0	; 192
 5f4:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("with Effect 1");
 5f8:	8d e5       	ldi	r24, 0x5D	; 93
 5fa:	91 e0       	ldi	r25, 0x01	; 1
 5fc:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 600:	08 95       	ret

00000602 <DeleteClipI>:
	}
}
void DeleteClipI(){
	if ((SELval == 8) && (Row != 0) && (Screen == 3)){
 602:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 606:	88 30       	cpi	r24, 0x08	; 8
 608:	39 f5       	brne	.+78     	; 0x658 <DeleteClipI+0x56>
 60a:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 60e:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 612:	89 2b       	or	r24, r25
 614:	09 f1       	breq	.+66     	; 0x658 <DeleteClipI+0x56>
 616:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 61a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 61e:	03 97       	sbiw	r24, 0x03	; 3
 620:	d9 f4       	brne	.+54     	; 0x658 <DeleteClipI+0x56>
		lcd_cmd(0x01);
 622:	81 e0       	ldi	r24, 0x01	; 1
 624:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 628:	80 e8       	ldi	r24, 0x80	; 128
 62a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Press Select");
 62e:	8b e7       	ldi	r24, 0x7B	; 123
 630:	91 e0       	ldi	r25, 0x01	; 1
 632:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xC0);
 636:	80 ec       	ldi	r24, 0xC0	; 192
 638:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("to delete");
 63c:	88 e8       	ldi	r24, 0x88	; 136
 63e:	91 e0       	ldi	r25, 0x01	; 1
 640:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		Screen = 6;
 644:	86 e0       	ldi	r24, 0x06	; 6
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 64c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		Row = 0;
 650:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 654:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 658:	08 95       	ret

0000065a <DeleteClipII>:
	}
}

void DeleteClipII(){
	if ((SELval == 8 ) && (Screen == 6)){
 65a:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 65e:	88 30       	cpi	r24, 0x08	; 8
 660:	d9 f4       	brne	.+54     	; 0x698 <DeleteClipII+0x3e>
 662:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 666:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 66a:	06 97       	sbiw	r24, 0x06	; 6
 66c:	a9 f4       	brne	.+42     	; 0x698 <DeleteClipII+0x3e>
		lcd_cmd(0x01);
 66e:	81 e0       	ldi	r24, 0x01	; 1
 670:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_cmd(0x80);
 674:	80 e8       	ldi	r24, 0x80	; 128
 676:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
		lcd_msg("Deleted");
 67a:	82 e9       	ldi	r24, 0x92	; 146
 67c:	91 e0       	ldi	r25, 0x01	; 1
 67e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 682:	2f e3       	ldi	r18, 0x3F	; 63
 684:	8d e0       	ldi	r24, 0x0D	; 13
 686:	93 e0       	ldi	r25, 0x03	; 3
 688:	21 50       	subi	r18, 0x01	; 1
 68a:	80 40       	sbci	r24, 0x00	; 0
 68c:	90 40       	sbci	r25, 0x00	; 0
 68e:	e1 f7       	brne	.-8      	; 0x688 <DeleteClipII+0x2e>
 690:	00 c0       	rjmp	.+0      	; 0x692 <DeleteClipII+0x38>
 692:	00 00       	nop
		_delay_ms(1000);
		Menu();
 694:	0e 94 99 01 	call	0x332	; 0x332 <Menu>
 698:	08 95       	ret

0000069a <Back>:
	}
}
void Back(){
	if ((BACKval == 16) && ((Screen == 2) || (Screen == 3))){
 69a:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <BACKval>
 69e:	80 31       	cpi	r24, 0x10	; 16
 6a0:	49 f4       	brne	.+18     	; 0x6b4 <Back+0x1a>
 6a2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6a6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6aa:	02 97       	sbiw	r24, 0x02	; 2
 6ac:	02 97       	sbiw	r24, 0x02	; 2
 6ae:	10 f4       	brcc	.+4      	; 0x6b4 <Back+0x1a>
		Menu();
 6b0:	0e 94 99 01 	call	0x332	; 0x332 <Menu>
	}
	if ((BACKval == 16) && ((Screen == 4) || (Screen == 5))){
 6b4:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <BACKval>
 6b8:	80 31       	cpi	r24, 0x10	; 16
 6ba:	49 f4       	brne	.+18     	; 0x6ce <Back+0x34>
 6bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6c0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6c4:	04 97       	sbiw	r24, 0x04	; 4
 6c6:	02 97       	sbiw	r24, 0x02	; 2
 6c8:	10 f4       	brcc	.+4      	; 0x6ce <Back+0x34>
		PlayBackAudio();
 6ca:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <PlayBackAudio>
 6ce:	08 95       	ret

000006d0 <main>:
void DeleteClipII();
void Back();

int main(void)
{
	DDRD &=~((1<<PIND0)|(1<<PIND1)|(1<<PIND2)|(1<<PIND3)|(1<<PIND4)) ;
 6d0:	8a b1       	in	r24, 0x0a	; 10
 6d2:	80 7e       	andi	r24, 0xE0	; 224
 6d4:	8a b9       	out	0x0a, r24	; 10
	i2c_init();
 6d6:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
	i2c_start();
 6da:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_start>
	i2c_write(0x70);
 6de:	80 e7       	ldi	r24, 0x70	; 112
 6e0:	0e 94 64 00 	call	0xc8	; 0xc8 <i2c_write>
	lcd_init();
 6e4:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
	lcd_msg("Voice Recorder");
 6e8:	8a e9       	ldi	r24, 0x9A	; 154
 6ea:	91 e0       	ldi	r25, 0x01	; 1
 6ec:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 6f0:	83 ed       	ldi	r24, 0xD3	; 211
 6f2:	90 e3       	ldi	r25, 0x30	; 48
 6f4:	01 97       	sbiw	r24, 0x01	; 1
 6f6:	f1 f7       	brne	.-4      	; 0x6f4 <main+0x24>
 6f8:	00 c0       	rjmp	.+0      	; 0x6fa <main+0x2a>
 6fa:	00 00       	nop
	_delay_ms(50);
	Menu();
 6fc:	0e 94 99 01 	call	0x332	; 0x332 <Menu>
    /* Replace with your application code */
    while (1) 
    {
		RECval = PIND & (1<<PIND0); /*1*/
 700:	89 b1       	in	r24, 0x09	; 9
 702:	81 70       	andi	r24, 0x01	; 1
 704:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <RECval>
		UPval = PIND & (1<<PIND1);/*2*/
 708:	89 b1       	in	r24, 0x09	; 9
 70a:	82 70       	andi	r24, 0x02	; 2
 70c:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <UPval>
		DOWNval = PIND & (1<<PIND2);//4
 710:	89 b1       	in	r24, 0x09	; 9
 712:	84 70       	andi	r24, 0x04	; 4
 714:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <DOWNval>
		SELval = PIND & (1<<PIND3);//8
 718:	89 b1       	in	r24, 0x09	; 9
 71a:	88 70       	andi	r24, 0x08	; 8
 71c:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <SELval>
		BACKval = PIND & (1<<PIND4); //16
 720:	89 b1       	in	r24, 0x09	; 9
 722:	80 71       	andi	r24, 0x10	; 16
 724:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <BACKval>
		
		Recording();
 728:	0e 94 b5 01 	call	0x36a	; 0x36a <Recording>
		Navigate();
 72c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <Navigate>
		if ((SELval == 8) && (Screen == 1) && (Row == 1)){
 730:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 734:	88 30       	cpi	r24, 0x08	; 8
 736:	71 f4       	brne	.+28     	; 0x754 <main+0x84>
 738:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 73c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 740:	01 97       	sbiw	r24, 0x01	; 1
 742:	41 f4       	brne	.+16     	; 0x754 <main+0x84>
 744:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 748:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 74c:	01 97       	sbiw	r24, 0x01	; 1
 74e:	11 f4       	brne	.+4      	; 0x754 <main+0x84>
			PlayBackAudio();
 750:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <PlayBackAudio>
		}
		if ((SELval == 8) && (Screen == 1) && (Row == 2)){
 754:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <SELval>
 758:	88 30       	cpi	r24, 0x08	; 8
 75a:	71 f4       	brne	.+28     	; 0x778 <main+0xa8>
 75c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 760:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 764:	01 97       	sbiw	r24, 0x01	; 1
 766:	41 f4       	brne	.+16     	; 0x778 <main+0xa8>
 768:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 76c:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 770:	02 97       	sbiw	r24, 0x02	; 2
 772:	11 f4       	brne	.+4      	; 0x778 <main+0xa8>
			DeleteAudio();
 774:	0e 94 17 02 	call	0x42e	; 0x42e <DeleteAudio>
		}
		PlayClipI();
 778:	0e 94 33 02 	call	0x466	; 0x466 <PlayClipI>
		PlayClipII();
 77c:	0e 94 8a 02 	call	0x514	; 0x514 <PlayClipII>
		DeleteClipI();
 780:	0e 94 01 03 	call	0x602	; 0x602 <DeleteClipI>
		DeleteClipII();
 784:	0e 94 2d 03 	call	0x65a	; 0x65a <DeleteClipII>
		Back();
 788:	0e 94 4d 03 	call	0x69a	; 0x69a <Back>
		
    }
 78c:	b9 cf       	rjmp	.-142    	; 0x700 <main+0x30>

0000078e <_exit>:
 78e:	f8 94       	cli

00000790 <__stop_program>:
 790:	ff cf       	rjmp	.-2      	; 0x790 <__stop_program>
